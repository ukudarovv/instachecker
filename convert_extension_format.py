#!/usr/bin/env python3
"""
–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä cookies –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç –±–æ—Ç–∞.

–†–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ (EditThisCookie, Cookie-Editor) —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é—Ç cookies
–≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏. –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö –≤ —Ñ–æ—Ä–º–∞—Ç,
–ø–æ–Ω—è—Ç–Ω—ã–π –±–æ—Ç—É InstaChecker.
"""

import json
import sys
from typing import List, Dict, Any


def convert_extension_cookies(extension_cookies: List[Dict[str, Any]]) -> List[Dict[str, Any]]:
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç cookies –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç –±–æ—Ç–∞.
    
    Args:
        extension_cookies: Cookies –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
        
    Returns:
        Cookies –≤ —Ñ–æ—Ä–º–∞—Ç–µ –±–æ—Ç–∞
    """
    bot_cookies = []
    
    for cookie in extension_cookies:
        # –°–æ–∑–¥–∞–µ–º cookie –¥–ª—è –±–æ—Ç–∞
        bot_cookie = {
            "name": cookie["name"],
            "value": cookie["value"],
            "domain": cookie.get("domain", ".instagram.com"),
            "path": cookie.get("path", "/")
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º expires –µ—Å–ª–∏ –µ—Å—Ç—å expirationDate
        if "expirationDate" in cookie and cookie["expirationDate"]:
            bot_cookie["expires"] = cookie["expirationDate"]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–ª–∞–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        if cookie.get("httpOnly", False):
            bot_cookie["httpOnly"] = True
            
        if cookie.get("secure", False):
            bot_cookie["secure"] = True
            
        if "sameSite" in cookie and cookie["sameSite"]:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º sameSite –∑–Ω–∞—á–µ–Ω–∏—è
            same_site = cookie["sameSite"]
            if same_site == "no_restriction":
                bot_cookie["sameSite"] = "None"
            elif same_site in ["lax", "strict"]:
                bot_cookie["sameSite"] = same_site.capitalize()
            elif same_site == "unspecified":
                # –û–ø—É—Å–∫–∞–µ–º unspecified
                pass
            else:
                bot_cookie["sameSite"] = same_site
        
        bot_cookies.append(bot_cookie)
    
    return bot_cookies


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("=" * 60)
    print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä cookies –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞")
    print("=" * 60)
    print()
    
    if len(sys.argv) > 1:
        # –ß–∏—Ç–∞–µ–º –∏–∑ —Ñ–∞–π–ª–∞
        file_path = sys.argv[1]
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                extension_cookies = json.load(f)
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            return 1
        except json.JSONDecodeError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ JSON: {e}")
            return 1
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        print("–í—Å—Ç–∞–≤—å—Ç–µ JSON —Å cookies –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–≤–∞ —Ä–∞–∑–∞:")
        print()
        
        lines = []
        empty_count = 0
        while True:
            try:
                line = input()
                if not line.strip():
                    empty_count += 1
                    if empty_count >= 2:
                        break
                else:
                    empty_count = 0
                    lines.append(line)
            except EOFError:
                break
        
        if not lines:
            print("‚ùå Cookies –Ω–µ –≤–≤–µ–¥–µ–Ω—ã")
            return 1
        
        cookies_text = '\n'.join(lines)
        
        try:
            extension_cookies = json.loads(cookies_text)
        except json.JSONDecodeError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ JSON: {e}")
            return 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –º–∞—Å—Å–∏–≤
    if not isinstance(extension_cookies, list):
        print("‚ùå Cookies –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º")
        return 1
    
    print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ cookies –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: {len(extension_cookies)}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º
    try:
        bot_cookies = convert_extension_cookies(extension_cookies)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionid
    has_sessionid = any(c.get('name') == 'sessionid' for c in bot_cookies)
    
    print("\n" + "=" * 60)
    print("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    print("=" * 60)
    print(f"\nüìä –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ cookies: {len(bot_cookies)}")
    
    if has_sessionid:
        print("‚úÖ sessionid –Ω–∞–π–¥–µ–Ω - –æ—Ç–ª–∏—á–Ω–æ!")
    else:
        print("‚ö†Ô∏è sessionid –ù–ï –ù–ê–ô–î–ï–ù!")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –í—ã –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—à–ª–∏ –≤ Instagram")
        print("   2. sessionid –∏–º–µ–µ—Ç –æ—Å–æ–±—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("   ")
        print("   –†–ï–®–ï–ù–ò–ï:")
        print("   1. –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ Instagram (–≤—ã–π—Ç–∏ –∏ –≤–æ–π—Ç–∏)")
        print("   2. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ cookies –∑–∞–Ω–æ–≤–æ")
        print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –±—Ä–∞—É–∑–µ—Ä")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ cookies
    print("\nüìã –°–ø–∏—Å–æ–∫ cookies:")
    for i, cookie in enumerate(bot_cookies, 1):
        value_preview = cookie['value'][:30] + '...' if len(cookie['value']) > 30 else cookie['value']
        print(f"  {i}. {cookie['name']}: {value_preview}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
    result_json = json.dumps(bot_cookies, ensure_ascii=False, indent=2)
    
    print("\n" + "=" * 60)
    if has_sessionid:
        print("‚úÖ –ì–û–¢–û–í–û –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ")
    else:
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: sessionid –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
    print("=" * 60)
    print()
    print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç JSON –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –±–æ—Ç:")
    print("-" * 60)
    print(result_json)
    print("-" * 60)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    output_file = "cookies_converted_for_bot.json"
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(result_json)
        print(f"\nüíæ –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª: {output_file}")
    except Exception as e:
        print(f"\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª: {e}")
    
    print()
    print("üëâ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("  1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ JSON –≤—ã—à–µ")
    print("  2. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç –≤ Telegram")
    print("  3. Instagram ‚Üí –î–æ–±–∞–≤–∏—Ç—å IG-—Å–µ—Å—Å–∏—é ‚Üí –ò–º–ø–æ—Ä—Ç cookies")
    print("  4. –í—Å—Ç–∞–≤—å—Ç–µ cookies –≤ –±–æ—Ç")
    
    if not has_sessionid:
        print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –ï—Å–ª–∏ sessionid –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç:")
        print("  ‚Üí –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ Instagram –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ")
        print("  ‚Üí –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ cookies —Å sessionid")
    
    return 0 if has_sessionid else 1


if __name__ == "__main__":
    sys.exit(main())
