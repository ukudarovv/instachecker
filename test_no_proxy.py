#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ proxy.
"""

import asyncio
import os
from datetime import datetime
from project.services.ig_screenshot import check_account_with_header_screenshot

async def test_no_proxy():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ proxy."""
    
    username = "ukudarov"
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = "screenshots"
    os.makedirs(screenshots_dir, exist_ok=True)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    screenshot_path = os.path.join(screenshots_dir, f"no_proxy_{username}_{timestamp}.png")
    
    print(f"üéØ –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ë–ï–ó proxy –¥–ª—è @{username}")
    print(f"üì∏ –ü—É—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {screenshot_path}")
    print("-" * 50)
    
    try:
        # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ë–ï–ó proxy
        result = await check_account_with_header_screenshot(
            username=username,
            proxy_url=None,  # –ë–ï–ó proxy
            screenshot_path=screenshot_path,
            headless=True,
            timeout_ms=60000,
            dark_theme=True,
            mobile_emulation=False,
            crop_ratio=0
        )
        
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:")
        print("=" * 50)
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print(f"üë§ Username: {result.get('username', 'N/A')}")
        print(f"‚úÖ Exists: {result.get('exists', 'N/A')}")
        print(f"üì∏ Screenshot: {result.get('screenshot_path', 'N/A')}")
        print(f"‚ùå Error: {result.get('error', 'None')}")
        print(f"‚ö†Ô∏è Warning: {result.get('warning', 'None')}")
        print(f"üîß Checked via: {result.get('checked_via', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        if result.get('screenshot_path') and os.path.exists(result['screenshot_path']):
            file_size = os.path.getsize(result['screenshot_path']) / 1024
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} KB")
            print(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

async def test_multiple_accounts_no_proxy():
    """–¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –±–µ–∑ proxy."""
    
    accounts = ["ukudarov", "instagram", "test_account"]
    
    print(f"üß™ –¢–µ—Å—Ç {len(accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ë–ï–ó proxy")
    print("=" * 50)
    
    results = []
    
    for i, username in enumerate(accounts, 1):
        print(f"\n[{i}/{len(accounts)}] –¢–µ—Å—Ç–∏—Ä—É–µ–º @{username}...")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
        screenshots_dir = "screenshots"
        os.makedirs(screenshots_dir, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        screenshot_path = os.path.join(screenshots_dir, f"no_proxy_{username}_{timestamp}.png")
        
        try:
            result = await check_account_with_header_screenshot(
                username=username,
                proxy_url=None,  # –ë–ï–ó proxy
                screenshot_path=screenshot_path,
                headless=True,
                timeout_ms=60000,
                dark_theme=True,
                mobile_emulation=False,
                crop_ratio=0
            )
            
            success = result.get('exists', False) and result.get('screenshot_path') and os.path.exists(result['screenshot_path'])
            results.append({
                'username': username,
                'success': success,
                'screenshot': result.get('screenshot_path'),
                'error': result.get('error')
            })
            
            if success:
                file_size = os.path.getsize(result['screenshot_path']) / 1024
                print(f"  ‚úÖ @{username} - —É—Å–ø–µ—à–Ω–æ ({file_size:.1f} KB)")
            else:
                print(f"  ‚ùå @{username} - –Ω–µ—É–¥–∞—á–Ω–æ: {result.get('error', 'Unknown error')}")
                
        except Exception as e:
            print(f"  ‚ùå @{username} - –æ—à–∏–±–∫–∞: {e}")
            results.append({
                'username': username,
                'success': False,
                'screenshot': None,
                'error': str(e)
            })
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    print("=" * 50)
    
    successful = sum(1 for r in results if r['success'])
    total = len(results)
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {successful}/{total}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö: {total - successful}/{total}")
    
    for result in results:
        status = "‚úÖ" if result['success'] else "‚ùå"
        print(f"{status} @{result['username']}: {result['error'] or 'OK'}")
    
    return results

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ë–ï–ó proxy")
    print("=" * 50)
    
    # –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç
    test_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:\n1. –û–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç\n2. –ù–µ—Å–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()
    
    if test_choice == "1":
        # –¢–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
        username = input("–í–≤–µ–¥–∏—Ç–µ username –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
        if not username:
            username = "ukudarov"
        
        success = asyncio.run(test_no_proxy())
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("=" * 50)
        print(f"‚úÖ –£—Å–ø–µ—Ö: {success}")
        
    elif test_choice == "2":
        # –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        asyncio.run(test_multiple_accounts_no_proxy())
        
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞...")
        asyncio.run(test_no_proxy())
