#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ api-v2 –≤ –±–æ—Ç
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_files_contain_api_v2():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–¥–µ—Ä–∂–∞—Ç api-v2"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ api-v2...")
    
    files_to_check = [
        "project/services/system_settings.py",
        "project/keyboards.py", 
        "project/services/hybrid_checker.py",
        "project/services/main_checker.py",
        "project/cron/auto_checker_new.py",
        "project/handlers/user_management.py"
    ]
    
    passed = 0
    total = len(files_to_check)
    
    for file_path in files_to_check:
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
                if "api-v2" in content:
                    print(f"‚úÖ {file_path}: —Å–æ–¥–µ—Ä–∂–∏—Ç api-v2")
                    passed += 1
                else:
                    print(f"‚ùå {file_path}: –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç api-v2")
        except Exception as e:
            print(f"‚ùå {file_path}: –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
    
    return passed, total

def test_api_v2_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ api_v2_proxy_checker"""
    print("üîß –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ api_v2_proxy_checker...")
    
    try:
        from project.services.api_v2_proxy_checker import check_account_via_api_v2_proxy
        print("‚úÖ api_v2_proxy_checker –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ api_v2_proxy_checker: {e}")
        return False

def test_keyboards():
    """–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    print("üîß –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
    
    try:
        from project.keyboards import admin_verify_mode_selection_kb, verify_mode_selection_kb
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º)
        admin_kb = admin_verify_mode_selection_kb("api-v2")
        admin_text = str(admin_kb)
        if "api-v2" in admin_text:
            print("‚úÖ api-v2 –¥–æ–±–∞–≤–ª–µ–Ω –≤ admin_verify_mode_selection_kb")
        else:
            print("‚ùå api-v2 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ admin_verify_mode_selection_kb")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º)
        user_kb = verify_mode_selection_kb("api-v2")
        user_text = str(user_kb)
        if "api-v2" in user_text:
            print("‚úÖ api-v2 –¥–æ–±–∞–≤–ª–µ–Ω –≤ verify_mode_selection_kb")
        else:
            print("‚ùå api-v2 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ verify_mode_selection_kb")
            return False
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ keyboards: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò API-V2 –í –ë–û–¢")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("\nüìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ api-v2...")
    files_passed, files_total = test_files_contain_api_v2()
    
    # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç
    print("\nüìã –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç api_v2_proxy_checker...")
    import_passed = test_api_v2_import()
    
    # –¢–µ—Å—Ç 3: –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    print("\nüìã –¢–µ—Å—Ç 3: –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
    keyboards_passed = test_keyboards()
    
    # –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    total_passed = files_passed + (1 if import_passed else 0) + (1 if keyboards_passed else 0)
    total_tests = files_total + 2
    
    print("\n" + "=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢: {total_passed}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if total_passed == total_tests:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! API-V2 –£–°–ü–ï–®–ù–û –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù –í –ë–û–¢!")
        print("\n‚úÖ –†–µ–∂–∏–º api-v2 –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("   - –î–æ—Å—Ç—É–ø–µ–Ω –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏")
        print("   - –î–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        print("   - –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤–æ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
        print("   - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–∫—Å–∏")
        print("   - –°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —á–µ—Ä–µ–∑ Firefox")
        print("   - –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞")
        print("   - –£–±–∏—Ä–∞–µ—Ç –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ")
        return True
    else:
        print(f"‚ö†Ô∏è {total_tests - total_passed} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
