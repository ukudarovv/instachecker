#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ api-v2 –≤ –±–æ—Ç–∞.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), 'project'))

from project.services.main_checker import check_account_main
from project.models import User, Account
from project.config import get_settings
from project.services.system_settings import set_global_verify_mode, get_global_verify_mode
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

async def test_final_api_v2_integration():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ api-v2"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    settings = get_settings()
    engine = create_engine(settings.db_url)
    SessionLocal = sessionmaker(bind=engine)
    
    with SessionLocal() as session:
        print("üéØ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–µ–∂–∏–º–∞ api-v2 –≤ –±–æ—Ç–∞")
        print("=" * 60)
        
        # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º api-v2
        print("1Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º api-v2...")
        set_global_verify_mode(session, "api-v2")
        current_mode = get_global_verify_mode(session)
        print(f"   ‚úÖ –†–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {current_mode}")
        
        # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = session.query(User).filter(User.id == 1).first()
        if not test_user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"2Ô∏è‚É£ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.id}")
        
        # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º main_checker —Å —Ä–µ–∂–∏–º–æ–º api-v2
        print("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º main_checker —Å —Ä–µ–∂–∏–º–æ–º api-v2...")
        
        test_accounts = [
            "ukudarov",  # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            "instagram",  # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            "nonexistent123456789",  # –ù–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        ]
        
        for username in test_accounts:
            print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ @{username}...")
            
            try:
                success, message, screenshot_path = await check_account_main(
                    username=username,
                    session=session,
                    user_id=test_user.id
                )
                
                print(f"   ‚úÖ –£—Å–ø–µ—Ö: {success}")
                print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
                print(f"   üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_path or 'N/A'}")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # 4. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∂–∏–º api+instagram
        print("\n4Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∂–∏–º api+instagram...")
        set_global_verify_mode(session, "api+instagram")
        final_mode = get_global_verify_mode(session)
        print(f"   ‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: {final_mode}")
        
        print("\n" + "=" * 60)
        print("üéâ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("‚úÖ –†–µ–∂–∏–º api-v2 –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–∞")
        print("‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: 'üîë API v2 + üåê Proxy (–Ω–æ–≤—ã–π)'")
        print("‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –º–µ–Ω—é")
        print("‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤")
        print("‚úÖ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    asyncio.run(test_final_api_v2_integration())
