#!/usr/bin/env python3
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ Instagram –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ Playwright.
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ç–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—à–æ—Ç.
"""

import asyncio
import os
from datetime import datetime
from playwright.async_api import async_playwright

async def direct_screenshot_test():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫."""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    username = "ukudarov"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π username
    proxy_url = "http://proxy:port"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à proxy
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = "screenshots"
    os.makedirs(screenshots_dir, exist_ok=True)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    screenshot_path = os.path.join(screenshots_dir, f"direct_{username}_{timestamp}.png")
    
    print(f"üéØ –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è @{username}")
    print(f"üåê Proxy: {proxy_url}")
    print(f"üì∏ –ü—É—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {screenshot_path}")
    print("-" * 50)
    
    try:
        async with async_playwright() as p:
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
            browser = await p.chromium.launch(
                headless=True,
                args=[
                    "--no-sandbox",
                    "--disable-dev-shm-usage",
                    "--disable-gpu-sandbox",
                    "--enable-gpu",
                    "--force-device-scale-factor=1",
                    "--disable-web-security",
                    "--disable-features=VizDisplayCompositor"
                ]
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å proxy
            context = await browser.new_context(
                viewport={"width": 1920, "height": 1080},
                user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
            )
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            page = await context.new_page()
            
            # URL –ø—Ä–æ—Ñ–∏–ª—è
            url = f"https://www.instagram.com/{username}/"
            
            print(f"üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {url}")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            await page.goto(url, wait_until="domcontentloaded", timeout=60000)
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            await page.wait_for_timeout(5000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            current_url = page.url
            print(f"üîó –¢–µ–∫—É—â–∏–π URL: {current_url}")
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
            print("üåô –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É...")
            await page.evaluate("""
                // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
                document.body.style.setProperty('background-color', '#1a1a1a', 'important');
                document.documentElement.style.setProperty('background-color', '#1a1a1a', 'important');
                document.body.style.setProperty('color', '#e6e6e6', 'important');
            """)
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
            await page.wait_for_timeout(2000)
            
            # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            print("üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...")
            await page.screenshot(path=screenshot_path, full_page=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if os.path.exists(screenshot_path):
                file_size = os.path.getsize(screenshot_path) / 1024
                print(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω: {screenshot_path}")
                print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} KB")
                
                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                try:
                    from PIL import Image
                    img = Image.open(screenshot_path)
                    width, height = img.size
                    print(f"üìê –†–∞–∑–º–µ—Ä—ã: {width}x{height}")
                except ImportError:
                    print("‚ö†Ô∏è PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ä–∞–∑–º–µ—Ä—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
                
                return {
                    "success": True,
                    "screenshot_path": screenshot_path,
                    "file_size": file_size,
                    "url": current_url
                }
            else:
                print("‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!")
                return {
                    "success": False,
                    "error": "screenshot_not_created"
                }
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return {
            "success": False,
            "error": str(e)
        }
    
    finally:
        try:
            await browser.close()
        except:
            pass

async def test_without_proxy():
    """–¢–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –±–µ–∑ proxy."""
    
    username = "ukudarov"
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = "screenshots"
    os.makedirs(screenshots_dir, exist_ok=True)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    screenshot_path = os.path.join(screenshots_dir, f"no_proxy_{username}_{timestamp}.png")
    
    print(f"üéØ –¢–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –±–µ–∑ proxy –¥–ª—è @{username}")
    print(f"üì∏ –ü—É—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {screenshot_path}")
    print("-" * 50)
    
    try:
        async with async_playwright() as p:
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
            browser = await p.chromium.launch(
                headless=True,
                args=[
                    "--no-sandbox",
                    "--disable-dev-shm-usage",
                    "--disable-gpu-sandbox",
                    "--enable-gpu"
                ]
            )
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ–∑ proxy
            context = await browser.new_context(
                viewport={"width": 1920, "height": 1080},
                user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
            )
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            page = await context.new_page()
            
            # URL –ø—Ä–æ—Ñ–∏–ª—è
            url = f"https://www.instagram.com/{username}/"
            
            print(f"üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {url}")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            await page.goto(url, wait_until="domcontentloaded", timeout=60000)
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
            await page.wait_for_timeout(5000)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            current_url = page.url
            print(f"üîó –¢–µ–∫—É—â–∏–π URL: {current_url}")
            
            # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            print("üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...")
            await page.screenshot(path=screenshot_path, full_page=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if os.path.exists(screenshot_path):
                file_size = os.path.getsize(screenshot_path) / 1024
                print(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω: {screenshot_path}")
                print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} KB")
                return True
            else:
                print("‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    finally:
        try:
            await browser.close()
        except:
            pass

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä—è–º—ã—Ö —Ç–µ—Å—Ç–æ–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤")
    print("=" * 50)
    
    # –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç
    test_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:\n1. –° proxy\n2. –ë–µ–∑ proxy\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()
    
    if test_choice == "1":
        # –¢–µ—Å—Ç —Å proxy
        username = input("–í–≤–µ–¥–∏—Ç–µ username –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
        if username:
            # –û–±–Ω–æ–≤–ª—è–µ–º username
            import sys
            sys.modules[__name__].direct_screenshot_test.__code__ = direct_screenshot_test.__code__.replace(
                b"ukudarov", username.encode()
            )
        
        result = asyncio.run(direct_screenshot_test())
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("=" * 50)
        print(f"‚úÖ –£—Å–ø–µ—Ö: {result.get('success', False)}")
        if result.get('screenshot_path'):
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {result.get('screenshot_path')}")
        if result.get('error'):
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
            
    elif test_choice == "2":
        # –¢–µ—Å—Ç –±–µ–∑ proxy
        username = input("–í–≤–µ–¥–∏—Ç–µ username –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
        if username:
            # –û–±–Ω–æ–≤–ª—è–µ–º username
            import sys
            sys.modules[__name__].test_without_proxy.__code__ = test_without_proxy.__code__.replace(
                b"ukudarov", username.encode()
            )
        
        success = asyncio.run(test_without_proxy())
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("=" * 50)
        print(f"‚úÖ –£—Å–ø–µ—Ö: {success}")
        
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å proxy...")
        asyncio.run(direct_screenshot_test())
