#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ header —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π –≤ –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –±–æ—Ç–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from project.database import get_engine, get_session_factory, init_db
from project.services.main_checker import check_account_main
from project.models import User, Proxy


async def test_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –±–æ—Ç–∞"""
    
    print("=" * 80)
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò: Header —Å–∫—Ä–∏–Ω—à–æ—Ç —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π –≤ –±–æ—Ç–µ")
    print("=" * 80)
    print()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    db_url = "sqlite:///bot.db"
    engine = get_engine(db_url)
    init_db(engine)
    session_factory = get_session_factory(engine)
    
    with session_factory() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = session.query(User).first()
        if not user:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î!")
            return
        
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–∫—Å–∏
        proxy = session.query(Proxy).filter(
            Proxy.user_id == user.id,
            Proxy.is_active == True
        ).first()
        
        if not proxy:
            print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
            return
        
        print(f"üåê –ü—Ä–æ–∫—Å–∏: {proxy.scheme}://{proxy.host}")
        print()
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
        test_username = "instagram"
        
        print(f"üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞: @{test_username}")
        print()
        
        try:
            # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏
            success, message, screenshot_path = await check_account_main(
                username=test_username,
                session=session,
                user_id=user.id
            )
            
            print()
            print("=" * 80)
            print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´")
            print("=" * 80)
            print(f"‚úÖ –£—Å–ø–µ—Ö: {success}")
            print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_path}")
            
            if screenshot_path and os.path.exists(screenshot_path):
                size = os.path.getsize(screenshot_path) / 1024
                print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size:.1f} KB")
                print()
                print(f"üéØ –£–°–ü–ï–•! –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω: {screenshot_path}")
                print()
                print("üëâ –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
                print("   ‚Ä¢ –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ (—á–µ—Ä–Ω—ã–π —Ñ–æ–Ω) ‚úì")
                print("   ‚Ä¢ –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç ‚úì")
                print("   ‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–ª—å–∫–æ header'–∞ ‚úì")
                print("   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–¥–Ω–∞ (–ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –ø–æ–¥–ø–∏—Å—á–∏–∫–∏) ‚úì")
            else:
                print("‚ö†Ô∏è –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω")
            
            print()
            print("=" * 80)
            
        except Exception as e:
            print()
            print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
            import traceback
            traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_integration())

