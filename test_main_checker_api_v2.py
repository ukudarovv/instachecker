#!/usr/bin/env python3
"""
–¢–µ—Å—Ç main_checker —Å —Ä–µ–∂–∏–º–æ–º api-v2.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), 'project'))

from project.services.main_checker import check_account_main
from project.models import User, Account
from project.config import get_settings
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

async def test_main_checker_api_v2():
    """–¢–µ—Å—Ç main_checker —Å —Ä–µ–∂–∏–º–æ–º api-v2"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    settings = get_settings()
    engine = create_engine(settings.db_url)
    SessionLocal = sessionmaker(bind=engine)
    
    with SessionLocal() as session:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = session.query(User).filter(User.id == 1).first()
        if not test_user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.id}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
        test_accounts = [
            "ukudarov",  # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            "instagram",  # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            "nonexistent123456789",  # –ù–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        ]
        
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ main_checker —Å —Ä–µ–∂–∏–º–æ–º api-v2...")
        
        for username in test_accounts:
            print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ @{username}...")
            
            try:
                success, message, screenshot_path = await check_account_main(
                    username=username,
                    session=session,
                    user_id=test_user.id
                )
                
                print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è @{username}:")
                print(f"   ‚úÖ –£—Å–ø–µ—Ö: {success}")
                print(f"   üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
                print(f"   üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_path or 'N/A'}")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ @{username}: {e}")
                import traceback
                traceback.print_exc()
        
        print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_main_checker_api_v2())
