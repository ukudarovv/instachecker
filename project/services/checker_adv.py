"""Advanced account checking with profile parsing and screenshots."""

from typing import Optional, Dict, Any
from sqlalchemy.orm import Session
from .proxy_utils import select_best_proxy, mark_success, mark_failure, is_available
from .ig_profile_extract import extract_profile_info
from .ig_screenshot import screenshot_profile_header
import logging

logger = logging.getLogger(__name__)


def _proxy_to_url(p) -> str:
    """Convert Proxy model to URL string."""
    auth = f"{p.username}:{p.password}@" if p.username and p.password else ""
    return f"{p.scheme}://{auth}{p.host}"


def _log_proxy_status(p, attempt: int, total_attempts: int) -> None:
    """Log detailed proxy status."""
    logger.info(f"üîÑ –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{total_attempts}")
    logger.info(f"üì° –ü—Ä–æ–∫—Å–∏ ID: {p.id}")
    logger.info(f"   –¢–∏–ø: {p.scheme.upper()}")
    logger.info(f"   –•–æ—Å—Ç: {p.host}")
    logger.info(f"   –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: {'–î–∞' if p.username else '–ù–µ—Ç'}")
    logger.info(f"   –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {p.priority}")
    logger.info(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {p.used_count}")
    logger.info(f"   –£—Å–ø–µ—Ö–æ–≤: {p.success_count}")
    logger.info(f"   –ü—Ä–æ–≤–∞–ª–æ–≤ –ø–æ–¥—Ä—è–¥: {p.fail_streak}")
    
    if p.cooldown_until:
        logger.info(f"   ‚ùÑÔ∏è –í –∫—É–ª–¥–∞—É–Ω–µ –¥–æ: {p.cooldown_until}")
    else:
        logger.info(f"   ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    
    print(f"\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{total_attempts} - –ü—Ä–æ–∫—Å–∏ #{p.id} ({p.scheme}://{p.host})")
    print(f"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {p.success_count} —É—Å–ø–µ—Ö–æ–≤, {p.fail_streak} –ø—Ä–æ–≤–∞–ª–æ–≤ –ø–æ–¥—Ä—è–¥")


async def check_username_with_details(
    session: Session,
    user_id: int,
    username: str,
    wait_selector: str,
    fallback_selector: str,
    headless: bool,
    timeout_ms: int
) -> Dict[str, Any]:
    """
    Advanced username checking with profile parsing and screenshots.
    
    Returns:
    {
      "username": str,
      "exists": bool|None,
      "full_name": str|None,
      "avatar_url": str|None,
      "followers": int|None,
      "following": int|None,
      "posts": int|None,
      "screenshot_path": str|None,
      "error": str|None
    }
    –° —Ä–æ—Ç–∞—Ü–∏–µ–π –ø—Ä–æ–∫—Å–∏ –∏ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–µ–π.
    """
    logger.info(f"üéØ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞: @{username}")
    print(f"\n{'='*70}")
    print(f"üéØ –ü–†–û–í–ï–†–ö–ê –ê–ö–ö–ê–£–ù–¢–ê: @{username}")
    print(f"{'='*70}")
    
    tried = set()
    last_error = None
    max_attempts = 4
    
    for attempt in range(1, max_attempts + 1):
        logger.info(f"\n{'='*50}")
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts}")
        logger.info(f"{'='*50}")
        
        p = select_best_proxy(session, user_id)
        
        if not p:
            logger.warning("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏")
            print(f"‚ùå –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts}: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏")
            break
            
        if p.id in tried:
            logger.warning(f"‚ö†Ô∏è –ü—Ä–æ–∫—Å–∏ #{p.id} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω")
            print(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ {attempt}/{max_attempts}: –í—Å–µ –ø—Ä–æ–∫—Å–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã")
            break
            
        tried.add(p.id)
        
        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏
        _log_proxy_status(p, attempt, max_attempts)
        
        proxy_url = _proxy_to_url(p)
        logger.info(f"üåê Proxy URL: {p.scheme}://{p.host}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        if not is_available(p):
            logger.warning(f"‚ùÑÔ∏è –ü—Ä–æ–∫—Å–∏ #{p.id} –≤ –∫—É–ª–¥–∞—É–Ω–µ")
            print(f"   ‚ùÑÔ∏è –ü—Ä–æ–∫—Å–∏ –≤ –∫—É–ª–¥–∞—É–Ω–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            continue
        
        logger.info(f"üìä –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏...")
        print(f"   üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Instagram...")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Ñ–∏–ª—è
        info = await extract_profile_info(username, proxy_url)
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if info.get("exists") is True:
            logger.info(f"‚úÖ –£–°–ü–ï–•! –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω")
            print(f"   ‚úÖ –£–°–ü–ï–•! –ü—Ä–æ—Ñ–∏–ª—å @{username} –Ω–∞–π–¥–µ–Ω")
            print(f"   üìä –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {info.get('followers', 'N/A')}")
            print(f"   üìä –ü–æ–¥–ø–∏—Å–∫–∏: {info.get('following', 'N/A')}")
            print(f"   üìä –ü–æ—Å—Ç—ã: {info.get('posts', 'N/A')}")
            mark_success(session, p)
            
            # –°–∫—Ä–∏–Ω—à–æ—Ç
            logger.info(f"üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç...")
            print(f"   üì∏ –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ—Ñ–∏–ª—è...")
            spath = await screenshot_profile_header(
                username=username,
                proxy_url=proxy_url,
                wait_selector=wait_selector,
                fallback_selector=fallback_selector,
                headless=headless,
                timeout_ms=timeout_ms,
            )
            if spath:
                logger.info(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {spath}")
                print(f"   ‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
            else:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
                print(f"   ‚ö†Ô∏è –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω")
            
            info["screenshot_path"] = spath
            return info
            
        elif info.get("exists") is False:
            logger.info(f"‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print(f"   ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å @{username} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (404)")
            mark_success(session, p)
            info["screenshot_path"] = None
            return info
            
        else:
            # –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            error = info.get("error", "unknown")
            logger.warning(f"‚ùå –ù–µ—É–¥–∞—á–∞: {error}")
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {error}")
            mark_failure(session, p)
            last_error = error
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –ø—Ä–æ–≤–∞–ª–∞
            session.refresh(p)
            logger.info(f"üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏ #{p.id}:")
            logger.info(f"   –ü—Ä–æ–≤–∞–ª–æ–≤ –ø–æ–¥—Ä—è–¥: {p.fail_streak}")
            if p.cooldown_until:
                logger.info(f"   ‚ùÑÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫—É–ª–¥–∞—É–Ω –¥–æ: {p.cooldown_until}")
                print(f"   ‚ùÑÔ∏è –ü—Ä–æ–∫—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫—É–ª–¥–∞—É–Ω –Ω–∞ 15 –º–∏–Ω—É—Ç")
            
            continue
    
    # –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å
    logger.error(f"‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –¥–ª—è @{username}")
    print(f"\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å @{username} –ø–æ—Å–ª–µ {max_attempts} –ø–æ–ø—ã—Ç–æ–∫")
    print(f"{'='*70}\n")
    
    return {
        "username": username, "exists": None, "full_name": None, "avatar_url": None,
        "followers": None, "following": None, "posts": None, "screenshot_path": None,
        "error": last_error or "no_proxy_or_all_failed"
    }
