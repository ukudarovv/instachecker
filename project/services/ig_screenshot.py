"""Instagram profile screenshot via Playwright + proxy."""

import asyncio
from typing import Optional
from playwright.async_api import async_playwright, TimeoutError as PWTimeoutError


def _proxy_kwargs_from_url(proxy_url: str):
    """Convert proxy URL to Playwright proxy kwargs."""
    # proxy_url: scheme://[user:pass@]host:port
    # Playwright –æ–∂–∏–¥–∞–µ—Ç {"server": "scheme://host:port", "username": "...", "password": "..."}
    from urllib.parse import urlparse
    u = urlparse(proxy_url)
    auth = {}
    if u.username and u.password:
        auth["username"] = u.username
        auth["password"] = u.password
    return {"server": f"{u.scheme}://{u.hostname}:{u.port}", **auth}


async def _apply_dark_theme(page):
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Instagram (–ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è)."""
    # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.wait_for_load_state('networkidle')
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
    await page.wait_for_timeout(1000)
    
    # –ü–û–õ–ù–ê–Ø —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ - —Ñ–æ–Ω –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
    dark_theme_css = """
    /* –ë–∞–∑–æ–≤—ã–π —Ñ–æ–Ω –∏ —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ */
    body, html {
        background-color: #1a1a1a !important;
        color: #e6e6e6 !important;
    }
    
    /* –ö–∞—Ä—Ç–æ—á–∫–∏ –∏ –±–ª–æ–∫–∏ */
    .profile-card, .container, .card, .box, main, section, article {
        background-color: #2d2d2d !important;
        border-color: #404040 !important;
        color: #e6e6e6 !important;
    }
    
    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
    h1, h2, h3, h4, h5, h6 {
        color: #ffffff !important;
    }
    
    /* –°—Å—ã–ª–∫–∏ */
    a {
        color: #8ab4f8 !important;
    }
    
    /* –ö–Ω–æ–ø–∫–∏ */
    button, .btn {
        background-color: #3b3b3b !important;
        color: #e6e6e6 !important;
        border-color: #5f6368 !important;
    }
    
    /* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è */
    img {
        opacity: 0.9 !important;
    }
    """
    
    await page.add_style_tag(content=dark_theme_css)
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π —á–µ—Ä–µ–∑ JavaScript
    await page.evaluate("""
        () => {
            console.log('üåô –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã...');
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º
            document.body.style.setProperty('background-color', '#1a1a1a', 'important');
            document.documentElement.style.setProperty('background-color', '#1a1a1a', 'important');
            document.body.style.setProperty('color', '#e6e6e6', 'important');
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º
            const containers = document.querySelectorAll('main, section, article, .container, .card');
            containers.forEach(el => {
                el.style.setProperty('background-color', '#2d2d2d', 'important');
                el.style.setProperty('color', '#e6e6e6', 'important');
            });
            
            console.log('‚úÖ –ü–æ–ª–Ω–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞');
        }
    """)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
    await page.wait_for_timeout(1000)


async def screenshot_profile_header(
    username: str,
    proxy_url: str,
    wait_selector: str,
    fallback_selector: str,
    headless: bool = True,
    timeout_ms: int = 15000,
    save_path: Optional[str] = None,
    dark_theme: bool = True
) -> Optional[str]:
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç https://www.instagram.com/<username>/ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏,
    –∂–¥—ë—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä 'wait_selector', –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω —ç–ª–µ–º–µ–Ω—Ç–∞.
    –ï—Å–ª–∏ –Ω–µ –≤—ã—à–ª–æ ‚Äî –ø—Ä–æ–±—É–µ—Ç 'fallback_selector'.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ PNG –∏–ª–∏ None.
    
    Args:
        dark_theme: –ï—Å–ª–∏ True, –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É (—á–µ—Ä–Ω—ã–π —Ñ–æ–Ω, –±–µ–ª—ã–π —Ç–µ–∫—Å—Ç)
    """
    url = f"https://www.instagram.com/{username.strip('@')}/"
    proxy_kwargs = _proxy_kwargs_from_url(proxy_url) if proxy_url else None
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=headless, args=[
            "--disable-blink-features=AutomationControlled",
            "--no-sandbox",
            "--disable-dev-shm-usage",
            "--disable-gpu-sandbox",
            "--enable-gpu",
            "--force-device-scale-factor=1",
            "--disable-web-security",
            "--disable-features=VizDisplayCompositor"
        ])
        context = await browser.new_context(
            viewport={"width": 1280, "height": 960},
            user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit Safari/537.36",
            proxy=proxy_kwargs
        )
        page = await context.new_page()
        try:
            await page.goto(url, wait_until="domcontentloaded", timeout=timeout_ms)
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Ü–µ–ª–∏—Ç—å—Å—è –≤ ¬´—à–∞–ø–∫—É¬ª –ø—Ä–æ—Ñ–∏–ª—è
            try:
                elem = page.locator(wait_selector).first
                await elem.wait_for(timeout=timeout_ms)
            except PWTimeoutError:
                elem = page.locator(fallback_selector).first
                await elem.wait_for(timeout=timeout_ms)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
            if dark_theme:
                # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                # await _apply_dark_theme(page)
                pass

            spath = save_path or f"/tmp/ig_{username}_header.png"
            await elem.screenshot(path=spath, type="png")
            return spath
        except Exception:
            return None
        finally:
            await context.close()
            await browser.close()


async def check_account_with_header_screenshot(
    username: str,
    proxy_url: str,
    screenshot_path: Optional[str] = None,
    headless: bool = True,
    timeout_ms: int = 30000,
    dark_theme: bool = True,
    mobile_emulation: bool = True,
    crop_ratio: float = 0.5  # 50% –≤–µ—Ä—Ö–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è header + –±–∏–æ)
) -> dict:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç Instagram –∞–∫–∫–∞—É–Ω—Ç —á–µ—Ä–µ–∑ proxy –ë–ï–ó IG —Å–µ—Å—Å–∏–∏.
    –î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–ª—å–∫–æ header'–∞ –ø—Ä–æ—Ñ–∏–ª—è —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π (—á–µ—Ä–Ω—ã–π —Ñ–æ–Ω).
    
    Args:
        username: Instagram username
        proxy_url: Proxy URL (scheme://[user:pass@]host:port)
        screenshot_path: Path to save screenshot
        headless: Run in headless mode
        timeout_ms: Timeout in milliseconds
        dark_theme: Apply dark theme (black background)
        mobile_emulation: Use mobile device emulation (iPhone 12)
        crop_ratio: Ratio for cropping to header (0.5 = 50% top, includes header+bio+buttons)
    
    Returns:
        dict with check results:
            - username: str
            - exists: bool | None
            - screenshot_path: str | None
            - error: str | None
            - checked_via: "proxy_header_screenshot"
            - dark_theme_applied: bool
    """
    import os
    from datetime import datetime
    
    print(f"\n[PROXY-FULL-SCREENSHOT] üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ @{username} —á–µ—Ä–µ–∑ proxy —Å –ø–æ–ª–Ω—ã–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º")
    print(f"[PROXY-FULL-SCREENSHOT] üåê Proxy: {proxy_url[:50] if proxy_url else 'None'}...")
    print(f"[PROXY-FULL-SCREENSHOT] üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞: {dark_theme}")
    print(f"[PROXY-FULL-SCREENSHOT] üñ•Ô∏è Desktop —Ñ–æ—Ä–º–∞—Ç: {not mobile_emulation}")
    print(f"[PROXY-FULL-SCREENSHOT] üì∏ –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–±–µ–∑ –æ–±—Ä–µ–∑–∫–∏)")
    
    result = {
        "username": username,
        "exists": None,
        "screenshot_path": None,
        "error": None,
        "checked_via": "proxy_full_screenshot",
        "dark_theme_applied": False,
        "mobile_emulation": mobile_emulation
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
    if not screenshot_path:
        screenshots_dir = "screenshots"
        os.makedirs(screenshots_dir, exist_ok=True)
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        screenshot_path = os.path.join(screenshots_dir, f"{username}_header_{timestamp}.png")
    
    url = f"https://www.instagram.com/{username.strip('@')}/"
    proxy_kwargs = _proxy_kwargs_from_url(proxy_url) if proxy_url else None
    
    try:
        async with async_playwright() as p:
            # üî• –£–õ–£–ß–®–ï–ù–ù–ê–Ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
            launch_args = [
                "--disable-blink-features=AutomationControlled",
                "--no-sandbox",
                "--disable-dev-shm-usage",
                # "--virtual-time-budget=10000",  # –û–¢–ö–õ–Æ–ß–ï–ù–û: –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å headless
                # "--run-all-compositor-stages-before-draw",  # –û–¢–ö–õ–Æ–ß–ï–ù–û: –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å headless
                "--disable-gpu-compositing",  # –û—Ç–∫–ª—é—á–∞–µ–º GPU –∫–æ–º–ø–æ–∑–∏—Ç–∏–Ω–≥ (–º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –±–µ–ª—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã)
            ]
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –±—Ä–∞—É–∑–µ—Ä–∞ - –û–¢–ö–õ–Æ–ß–ï–ù–û
            if dark_theme:
                # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                # launch_args.extend([
                #     "--force-dark-mode",
                #     "--enable-features=WebUIDarkMode"
                # ])
                pass
            
            # üî• –ü–†–û–ö–°–ò –Ω–∞ —É—Ä–æ–≤–Ω–µ –±—Ä–∞—É–∑–µ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è Playwright)
            browser_args = launch_args + [
                "--disable-dev-shm-usage",
                "--disable-gpu-sandbox", 
                "--enable-gpu",
                "--force-device-scale-factor=1",
                "--disable-web-security",
                "--disable-features=VizDisplayCompositor",
                "--window-size=1920,1080",  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ 1920x1080
                # "--start-maximized",  # –û–¢–ö–õ–Æ–ß–ï–ù–û: –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å headless —Ä–µ–∂–∏–º–æ–º
            ]
            
            # –î–æ–±–∞–≤–ª—è–µ–º proxy —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
            if proxy_kwargs:
                browser = await p.chromium.launch(
                    headless=headless,
                    args=browser_args,
                    proxy=proxy_kwargs
                )
            else:
                browser = await p.chromium.launch(
                    headless=headless,
                    args=browser_args
                )
            
            # üî• –ú–û–ë–ò–õ–¨–ù–ê–Ø –≠–ú–£–õ–Ø–¶–ò–Ø –∏–ª–∏ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
            if mobile_emulation:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º iPhone 12 –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
                device = p.devices["iPhone 12"]
                context_options = {
                    **device
                    # proxy –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º - —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ browser.launch()
                }
                
                # üî• –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê –Ω–∞ —É—Ä–æ–≤–Ω–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ - –û–¢–ö–õ–Æ–ß–ï–ù–û
                if dark_theme:
                    # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                    # context_options["color_scheme"] = "dark"
                    pass
                
                print(f"[PROXY-HEADER-SCREENSHOT] üì± –≠–º—É–ª—è—Ü–∏—è: iPhone 12")
            else:
                # –û–±—ã—á–Ω—ã–π desktop —Ä–µ–∂–∏–º —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º 1920x1080 (Full HD)
                context_options = {
                    "viewport": {"width": 1920, "height": 1080},
                    "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
                    # proxy –ù–ï –ø–µ—Ä–µ–¥–∞–µ–º - —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ browser.launch()
                }
                
                # üî• –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê –¥–ª—è desktop - –û–¢–ö–õ–Æ–ß–ï–ù–û
                if dark_theme:
                    # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                    # context_options["color_scheme"] = "dark"
                    pass
            
            context = await browser.new_context(**context_options)
            
            # üî• –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –¢–ï–ú–ù–ê–Ø –¢–ï–ú–ê —á–µ—Ä–µ–∑ JavaScript injection - –û–¢–ö–õ–Æ–ß–ï–ù–û
            if dark_theme:
                # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                # await context.add_init_script("""
                #     // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
                #     localStorage.setItem('dark_mode', '1');
                #     localStorage.setItem('ig_dark_mode', '1');
                #     localStorage.setItem('theme', 'dark');
                #     
                #     // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º matchMedia –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
                #     Object.defineProperty(window, 'matchMedia', {
                #         writable: true,
                #         value: (query) => ({
                #             matches: query.includes('dark') ? true : false,
                #             media: query,
                #             addListener: () => {},
                #             removeListener: () => {},
                #             addEventListener: () => {},
                #             removeEventListener: () => {},
                #             dispatchEvent: () => true,
                #         }),
                #     });
                #     
                #     console.log('üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞ —á–µ—Ä–µ–∑ localStorage –∏ matchMedia');
                # """)
                print(f"[PROXY-HEADER-SCREENSHOT] üåô JavaScript —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –û–¢–ö–õ–Æ–ß–ï–ù–ê")
            
            # –°—Ç–µ–ª—Å-—Ä–µ–∂–∏–º
            await context.add_init_script("""
                Object.defineProperty(navigator, 'webdriver', {get: () => undefined});
                Object.defineProperty(navigator, 'plugins', {get: () => [1, 2, 3, 4, 5]});
            """)
            
            page = await context.new_page()
            
            # üî• –≠–ú–£–õ–Ø–¶–ò–Ø –¢–ï–ú–ù–û–ô –¢–ï–ú–´ —á–µ—Ä–µ–∑ media - –û–¢–ö–õ–Æ–ß–ï–ù–û
            if dark_theme:
                # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                # await page.emulate_media(color_scheme='dark')
                print(f"[PROXY-HEADER-SCREENSHOT] üåô emulate_media –û–¢–ö–õ–Æ–ß–ï–ù")
            
            try:
                print(f"[PROXY-HEADER-SCREENSHOT] üì° –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: {url}")
                try:
                    response = await page.goto(url, wait_until="domcontentloaded", timeout=timeout_ms)
                    status_code = response.status if response else None
                    print(f"[PROXY-HEADER-SCREENSHOT] üìä HTTP Status: {status_code}")
                except PWTimeoutError as e:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚è±Ô∏è Timeout –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
                    result["error"] = f"timeout_loading_page: {str(e)}"
                    result["exists"] = False
                    await browser.close()
                    return result
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–¥
                if status_code == 404:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (404)")
                    result["exists"] = False
                    result["error"] = "404_not_found"
                    await browser.close()
                    return result
                
                elif status_code == 403:
                    print(f"[PROXY-HEADER-SCREENSHOT] üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (403)")
                    result["exists"] = None
                    result["error"] = "403_forbidden"
                    await browser.close()
                    return result
                
                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –£–í–ï–õ–ò–ß–ï–ù–û –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                print(f"[PROXY-HEADER-SCREENSHOT] ‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
                try:
                    await page.wait_for_timeout(5000)  # 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                except Exception as e:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                print(f"[PROXY-HEADER-SCREENSHOT] ‚è≥ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
                await page.wait_for_timeout(3000)  # –ï—â–µ 3 —Å–µ–∫—É–Ω–¥—ã
                
                # –£–°–ò–õ–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                current_url = page.url
                print(f"[PROXY-HEADER-SCREENSHOT] üîó –¢–µ–∫—É—â–∏–π URL: {current_url}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç –ª–∏ —ç—Ç–æ –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
                wrong_page_detected = False
                
                # –°–ø–∏—Å–æ–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö URL –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
                wrong_patterns = [
                    '/accounts/login',
                    '/accounts/signup',
                    '/challenge/',
                    '/suspended/',
                    '/access_tool/',
                    'instagram.com/accounts',
                    'instagram.com/login',
                ]
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
                for pattern in wrong_patterns:
                    if pattern in current_url.lower():
                        wrong_page_detected = True
                        print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {pattern}")
                        break
                
                # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if username.lower() not in current_url.lower() and not wrong_page_detected:
                    wrong_page_detected = True
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç username: {username}")
                
                # –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –¥–µ–ª–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
                if wrong_page_detected:
                    print(f"[PROXY-HEADER-SCREENSHOT] üîÑ –ü–ï–†–ï–ó–ê–ü–£–°–ö: –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é...")
                    
                    max_retries = 3
                    for retry in range(max_retries):
                        print(f"[PROXY-HEADER-SCREENSHOT] üîÑ –ü–æ–ø—ã—Ç–∫–∞ {retry + 1}/{max_retries}")
                        
                        try:
                            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
                            await page.close()
                            page = await context.new_page()
                            
                            # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
                            await page.wait_for_timeout(2000)
                            
                            # –î–µ–ª–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                            print(f"[PROXY-HEADER-SCREENSHOT] üì° –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞: {url}")
                            response = await page.goto(url, wait_until="domcontentloaded", timeout=timeout_ms)
                            status_code = response.status if response else None
                            print(f"[PROXY-HEADER-SCREENSHOT] üìä HTTP Status: {status_code}")
                            
                            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
                            await page.wait_for_timeout(5000)
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π URL
                            current_url = page.url
                            print(f"[PROXY-HEADER-SCREENSHOT] üîó –ù–æ–≤—ã–π URL: {current_url}")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø—Ä–∞–≤–∏–ª—Å—è –ª–∏ URL
                            is_correct = True
                            for pattern in wrong_patterns:
                                if pattern in current_url.lower():
                                    is_correct = False
                                    break
                            
                            if is_correct and username.lower() in current_url.lower():
                                print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ URL –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ {retry + 1}")
                                
                                # –í–ê–ñ–ù–û: –î–∞–µ–º –≤—Ä–µ–º—è —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                                print(f"[PROXY-HEADER-SCREENSHOT] ‚è≥ –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è URL...")
                                await page.wait_for_timeout(5000)
                                
                                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                                try:
                                    await page.wait_for_load_state('networkidle', timeout=10000)
                                    print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                                except:
                                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è Timeout –æ–∂–∏–¥–∞–Ω–∏—è networkidle, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º")
                                
                                # –°—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                                print(f"[PROXY-HEADER-SCREENSHOT] üö™ –£–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è URL...")
                                try:
                                    for _ in range(5):
                                        await page.keyboard.press("Escape")
                                        await page.wait_for_timeout(200)
                                except:
                                    pass
                                
                                break
                            else:
                                print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå URL –≤—Å–µ –µ—â–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ {retry + 1}")
                                
                                # –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
                                if retry == max_retries - 1:
                                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É")
                                    result["error"] = "wrong_page_redirect"
                                    result["exists"] = False
                                    await browser.close()
                                    return result
                        
                        except Exception as retry_error:
                            print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ {retry + 1}: {retry_error}")
                            if retry == max_retries - 1:
                                result["error"] = f"retry_failed: {retry_error}"
                                result["exists"] = False
                                await browser.close()
                                return result
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –°–ù–ê–ß–ê–õ–ê
                content = await page.content()
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è - —Å–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
                print(f"[PROXY-HEADER-SCREENSHOT] üì∏ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏ Instagram —Å—Ç—Ä–∞–Ω–∏—Ü—É "Open app" –∏–ª–∏ "Continue on web"
                if "Open app" in content or "open_app" in current_url.lower() or "Continue on web" in content:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è Instagram –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ desktop...")
                    
                    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –±—Ä–∞—É–∑–µ—Ä
                    await browser.close()
                    
                    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å DESKTOP —ç–º—É–ª—è—Ü–∏–µ–π
                    print(f"[PROXY-HEADER-SCREENSHOT] üñ•Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ DESKTOP —Ä–µ–∂–∏–º...")
                    
                    browser = await p.chromium.launch(
                        headless=headless,
                        args=launch_args + [
                            "--disable-dev-shm-usage",
                            "--disable-gpu-sandbox",
                            "--enable-gpu", 
                            "--force-device-scale-factor=1",
                            "--disable-web-security",
                            "--disable-features=VizDisplayCompositor"
                        ],
                        proxy=proxy_kwargs
                    )
                    
                    # Desktop viewport
                    context_options = {
                        "viewport": {"width": 1920, "height": 1080},
                        "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
                    }
                    if dark_theme:
                        context_options["color_scheme"] = "dark"
                    
                    context = await browser.new_context(**context_options)
                    
                    if dark_theme:
                        await context.add_init_script("""
                            localStorage.setItem('theme', 'dark');
                            localStorage.setItem('dark_mode', '1');
                        """)
                    
                    await context.add_init_script("""
                        Object.defineProperty(navigator, 'webdriver', {get: () => undefined});
                        Object.defineProperty(navigator, 'plugins', {get: () => [1, 2, 3, 4, 5]});
                    """)
                    
                    page = await context.new_page()
                    
                    if dark_theme:
                        await page.emulate_media(color_scheme='dark')
                    
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ cookies
                    print(f"[PROXY-HEADER-SCREENSHOT] üç™ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º cookies...")
                    await context.add_cookies([
                        {
                            'name': 'ig_did',
                            'value': 'A1B2C3D4-E5F6-7890-ABCD-EF1234567890',
                            'domain': '.instagram.com',
                            'path': '/'
                        },
                        {
                            'name': 'ig_nrcb',
                            'value': '1',
                            'domain': '.instagram.com',
                            'path': '/'
                        }
                    ])
                    
                    print(f"[PROXY-HEADER-SCREENSHOT] üîÑ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ (desktop)...")
                    response = await page.goto(url, wait_until="domcontentloaded", timeout=timeout_ms)
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...")
                    await page.wait_for_timeout(5000)
                    current_url = page.url
                    content = await page.content()
                    print(f"[PROXY-HEADER-SCREENSHOT] üîó URL: {current_url}")
                
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –±–∞–Ω–Ω–µ—Ä—ã
                print(f"[PROXY-HEADER-SCREENSHOT] üö™ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –±–∞–Ω–Ω–µ—Ä—ã...")
                
                # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–æ–∫ (–±–æ–ª—å—à–µ —Ä–∞–∑)
                try:
                    for _ in range(10):  # –ù–∞–∂–∏–º–∞–µ–º ESC 10 —Ä–∞–∑
                        await page.keyboard.press("Escape")
                        await page.wait_for_timeout(200)
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚å®Ô∏è –ù–∞–∂–∞–ª–∏ ESC 10 —Ä–∞–∑")
                except:
                    pass
                
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º cookies –±–∞–Ω–Ω–µ—Ä
                cookie_selectors = [
                    "button:has-text('Accept')",
                    "button:has-text('Allow')",
                    "button:has-text('I agree')",
                    "button:has-text('Agree')",
                    "button:has-text('OK')",
                    "[role='button']:has-text('Accept')",
                ]
                
                for selector in cookie_selectors:
                    try:
                        btn = page.locator(selector).first
                        if await btn.is_visible(timeout=1000):
                            await btn.click()
                            print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –ü—Ä–∏–Ω—è–ª–∏ cookies: {selector}")
                            await page.wait_for_timeout(1000)
                            break
                    except:
                        continue
                
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è
                close_selectors = [
                    "svg[aria-label='Close']",
                    "button[aria-label='Close']",
                    "[aria-label='Close']",
                    "button:has-text('Not Now')",
                    "button:has-text('–ù–µ —Å–µ–π—á–∞—Å')",
                    "div[role='dialog'] svg",  # –ò–∫–æ–Ω–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –≤ –¥–∏–∞–ª–æ–≥–µ
                    "div[role='dialog'] button",  # –õ—é–±–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –¥–∏–∞–ª–æ–≥–µ
                ]
                
                # –ü—Ä–æ–±—É–µ–º –∑–∞–∫—Ä—ã—Ç—å –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
                for i in range(3):  # –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
                    closed = False
                    for selector in close_selectors:
                        try:
                            close_button = page.locator(selector).first
                            if await close_button.is_visible(timeout=1000):
                                await close_button.click()
                                print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –ó–∞–∫—Ä—ã–ª–∏ –º–æ–¥–∞–ª–∫—É {i+1}: {selector}")
                                await page.wait_for_timeout(1000)
                                closed = True
                                break
                        except:
                            continue
                    
                    if not closed:
                        break  # –ë–æ–ª—å—à–µ –Ω–µ—á–µ–≥–æ –∑–∞–∫—Ä—ã–≤–∞—Ç—å
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑ –∏ –≤–≤–µ—Ä—Ö –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                try:
                    await page.evaluate("window.scrollTo(0, 300)")
                    await page.wait_for_timeout(1000)
                    await page.evaluate("window.scrollTo(0, 0)")
                    await page.wait_for_timeout(1000)
                    print(f"[PROXY-HEADER-SCREENSHOT] üìú –ü—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
                except:
                    pass
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–æ–∫
                print(f"[PROXY-HEADER-SCREENSHOT] ‚è≥ –§–∏–Ω–∞–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
                await page.wait_for_timeout(2000)  # 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
                
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω —á–µ—Ä–µ–∑ JavaScript - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–û
                print(f"[PROXY-HEADER-SCREENSHOT] üî• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω (–£–õ–¨–¢–†–ê-–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º)...")
                removed_count = await page.evaluate("""
                    () => {
                        let count = 0;
                        
                        // –£–¥–∞–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ (—É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 15 –∏—Ç–µ—Ä–∞—Ü–∏–π)
                        for (let iteration = 0; iteration < 15; iteration++) {
                            
                            // 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏ –∏ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫)
                            document.querySelectorAll('[role="dialog"], [aria-modal="true"], [data-testid*="modal"], [data-testid*="dialog"], [data-testid*="popup"], [data-testid*="overlay"], [role="presentation"], [data-visualcompletion="loading-state"]').forEach(el => {
                                el.remove();
                                count++;
                            });
                            
                            // 2. –£–¥–∞–ª—è–µ–º –≤—Å–µ overlay/backdrop/modal —ç–ª–µ–º–µ–Ω—Ç—ã (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫)
                            document.querySelectorAll('[class*="overlay"], [class*="Overlay"], [class*="backdrop"], [class*="Backdrop"], [class*="modal"], [class*="Modal"], [class*="popup"], [class*="PopUp"], [class*="Popup"], [class*="lightbox"], [class*="Lightbox"], [class*="drawer"], [class*="Drawer"], [class*="sheet"], [class*="Sheet"], [class*="panel"], [class*="Panel"], [class*="mask"], [class*="Mask"], [class*="shade"], [class*="Shade"], [class*="curtain"], [class*="Curtain"], [class*="veil"], [class*="Veil"], [class*="screen"], [class*="Screen"], [class*="window"], [class*="Window"], [class*="scrim"], [class*="Scrim"]').forEach(el => {
                                el.remove();
                                count++;
                            });
                            
                            // 3. –£–¥–∞–ª—è–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω—ã –∑–∞–≥—Ä—É–∑–∫–∏ (–±–µ–ª—ã–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏) –∏ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
                            document.querySelectorAll('[class*="skeleton"], [class*="Skeleton"], [class*="placeholder"], [class*="Placeholder"]').forEach(el => {
                                el.remove();
                                count++;
                            });
                            
                            // 4. –£–¥–∞–ª—è–µ–º –≤—Å–µ SVG –∫—Ä–µ—Å—Ç–∏–∫–∏ (–∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è)
                            document.querySelectorAll('svg[aria-label*="Close"], svg[aria-label*="close"], button[aria-label*="Close"]').forEach(el => {
                                const parent = el.closest('div');
                                if (parent && window.getComputedStyle(parent).position === 'fixed') {
                                    parent.remove();
                                    count++;
                                } else {
                                    el.remove();
                                    count++;
                                }
                            });
                            
                            // 5. –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π –∏ –≤—ã—Å–æ–∫–∏–º z-index
                            document.querySelectorAll('div').forEach(el => {
                                const style = window.getComputedStyle(el);
                                
                                // –≠–ª–µ–º–µ–Ω—Ç—ã —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π –∏ z-index > 100
                                if (style.position === 'fixed' && parseInt(style.zIndex) > 100) {
                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ª–∏ —ç—Ç–æ
                                    if (!el.querySelector('nav') && !el.closest('nav') && !el.querySelector('header')) {
                                        el.remove();
                                        count++;
                                    }
                                }
                                
                                // –ó–∞—Ç–µ–º–Ω–µ–Ω–∏—è —á–∞—Å—Ç–æ –∏–º–µ—é—Ç opacity < 1 –∏ position fixed
                                if (style.position === 'fixed' && parseFloat(style.opacity) < 1 && parseFloat(style.opacity) > 0) {
                                    // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω - —ç—Ç–æ overlay
                                    const rect = el.getBoundingClientRect();
                                    if (rect.width > window.innerWidth * 0.8 && rect.height > window.innerHeight * 0.8) {
                                        el.remove();
                                        count++;
                                    }
                                }
                            });
                            
                            // 6. –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å —á–µ—Ä–Ω—ã–º/—Å–µ—Ä—ã–º —Ñ–æ–Ω–æ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω (–∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ)
                            document.querySelectorAll('div').forEach(el => {
                                const style = window.getComputedStyle(el);
                                const bgColor = style.backgroundColor;
                                const rect = el.getBoundingClientRect();
                                
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —á–µ—Ä–Ω—ã–π/—Å–µ—Ä—ã–π —Ñ–æ–Ω –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
                                if ((bgColor.includes('rgba(0, 0, 0') || bgColor.includes('rgba(38, 38, 38')) && 
                                    rect.width > window.innerWidth * 0.5 && 
                                    rect.height > window.innerHeight * 0.5 &&
                                    style.position === 'fixed') {
                                    el.remove();
                                    count++;
                                }
                            });
                            
                            // 7. –£–¥–∞–ª—è–µ–º –±–µ–ª—ã–µ –±–ª–æ–∫–∏-–∑–∞–≥–ª—É—à–∫–∏ (loading states)
                            document.querySelectorAll('div').forEach(el => {
                                const style = window.getComputedStyle(el);
                                const bgColor = style.backgroundColor;
                                
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –±–µ–ª—ã–π —Ñ–æ–Ω –∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤–Ω—É—Ç—Ä–∏
                                if ((bgColor === 'rgb(255, 255, 255)' || bgColor === 'white') && 
                                    el.innerText.trim() === '' &&
                                    el.children.length === 0) {
                                    const rect = el.getBoundingClientRect();
                                    // –ï—Å–ª–∏ —ç—Ç–æ –±–æ–ª—å—à–æ–π –±–µ–ª—ã–π –±–ª–æ–∫
                                    if (rect.width > 100 && rect.height > 50) {
                                        el.remove();
                                        count++;
                                    }
                                }
                            });
                            
                            // 8. –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å pointer-events: none (—á–∞—Å—Ç–æ overlay)
                            document.querySelectorAll('[style*="pointer-events: none"], [style*="pointer-events:none"]').forEach(el => {
                                if (el.style.position === 'fixed' || el.style.position === 'absolute') {
                                    el.remove();
                                    count++;
                                }
                            });
                        }
                        
                        // –£–±–∏—Ä–∞–µ–º overflow: hidden —Å body (–º–æ–¥–∞–ª–∫–∏ —á–∞—Å—Ç–æ –±–ª–æ–∫–∏—Ä—É—é—Ç –ø—Ä–æ–∫—Ä—É—Ç–∫—É)
                        document.body.style.overflow = 'auto';
                        document.documentElement.style.overflow = 'auto';
                        
                        // –£–±–∏—Ä–∞–µ–º pointer-events: none —Å body
                        document.body.style.pointerEvents = 'auto';
                        document.documentElement.style.pointerEvents = 'auto';
                        
                        return count;
                    }
                """)
                print(f"[PROXY-HEADER-SCREENSHOT] üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {removed_count}")
                
                # –ñ–¥–µ–º –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏
                await page.wait_for_timeout(1500)
                
                # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ñ–ï–°–¢–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ï—â–µ —Ä–∞–∑ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
                print(f"[PROXY-HEADER-SCREENSHOT] üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê: –ü–æ–∏—Å–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–∏–º—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
                modal_check = await page.evaluate("""
                    () => {
                        const modals = document.querySelectorAll('[role="dialog"], [aria-modal="true"], [class*="modal"], [class*="Modal"]');
                        let visibleModals = 0;
                        modals.forEach(modal => {
                            const style = window.getComputedStyle(modal);
                            if (style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0') {
                                visibleModals++;
                                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º
                                modal.remove();
                            }
                        });
                        return visibleModals;
                    }
                """)
                
                if modal_check > 0:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –∏ —É–¥–∞–ª–µ–Ω–æ {modal_check} –≤–∏–¥–∏–º—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω")
                    await page.wait_for_timeout(1000)
                else:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
                
                # –°–£–ü–ï–†-–ê–ì–†–ï–°–°–ò–í–ù–ê–Ø —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–∞–∂–∞—Ç—å ESC
                try:
                    for _ in range(15):
                        await page.keyboard.press("Escape")
                        await page.wait_for_timeout(150)
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚å®Ô∏è –§–∏–Ω–∞–ª—å–Ω—ã–π ESC –Ω–∞–∂–∞—Ç 15 —Ä–∞–∑")
                except:
                    pass
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ü–†–Ø–ú–û –ü–ï–†–ï–î –°–ö–†–ò–ù–®–û–¢–û–ú
                print(f"[PROXY-HEADER-SCREENSHOT] üî• –ü–û–°–õ–ï–î–ù–Ø–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–µ—Ä–µ–¥ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º...")
                await page.evaluate("""
                    () => {
                        // –£–¥–∞–ª—è–µ–º –í–°–ï —ç–ª–µ–º–µ–Ω—Ç—ã —Å role="dialog" –∏–ª–∏ aria-modal="true"
                        document.querySelectorAll('[role="dialog"], [aria-modal="true"]').forEach(el => el.remove());
                        
                        // –£–¥–∞–ª—è–µ–º –≤—Å–µ overlay/backdrop
                        document.querySelectorAll('[class*="overlay"], [class*="Overlay"], [class*="backdrop"], [class*="Backdrop"]').forEach(el => el.remove());
                        
                        // –£–¥–∞–ª—è–µ–º –≤—Å–µ fixed —ç–ª–µ–º–µ–Ω—Ç—ã —Å –≤—ã—Å–æ–∫–∏–º z-index
                        document.querySelectorAll('div').forEach(el => {
                            const style = window.getComputedStyle(el);
                            if (style.position === 'fixed' && parseInt(style.zIndex) > 500) {
                                el.remove();
                            }
                        });
                        
                        // –£–±–∏—Ä–∞–µ–º overflow:hidden —Å body
                        document.body.style.overflow = 'auto';
                        document.documentElement.style.overflow = 'auto';
                    }
                """)
                print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
                
                if "Sorry, this page isn't available" in content:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                    result["exists"] = False
                    result["error"] = "page_not_found"
                    await browser.close()
                    return result
                
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ - —Å–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
                print(f"[PROXY-HEADER-SCREENSHOT] üì∏ –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
                
                # –ü—Ä–æ—Ñ–∏–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                print(f"[PROXY-HEADER-SCREENSHOT] ‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è (–ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –ø–æ–¥–ø–∏—Å—á–∏–∫–∏)...")
                
                # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                stats_loaded = False
                for attempt in range(10):  # 10 –ø–æ–ø—ã—Ç–æ–∫ –ø–æ 1 —Å–µ–∫—É–Ω–¥–µ
                    try:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —á–∏—Å–µ–ª –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
                        has_stats = await page.evaluate("""
                            () => {
                                // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π (–æ–±—ã—á–Ω–æ —ç—Ç–æ span –∏–ª–∏ div —Å —á–∏—Å–ª–∞–º–∏)
                                const statsElements = Array.from(document.querySelectorAll('span, div'));
                                const hasNumbers = statsElements.some(el => {
                                    const text = el.textContent.trim();
                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —á–∏—Å–ª–∞ —Ç–∏–ø–∞ "123", "1.2M", "695M" –∏ —Ç.–¥.
                                    return /^\d+(\.\d+)?[KMB]?$/.test(text.replace(/,/g, ''));
                                });
                                
                                // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–ª–æ–≤ "posts", "followers", "following"
                                const bodyText = document.body.innerText.toLowerCase();
                                const hasLabels = bodyText.includes('posts') || 
                                                 bodyText.includes('followers') || 
                                                 bodyText.includes('following') ||
                                                 bodyText.includes('–ø—É–±–ª–∏–∫–∞—Ü–∏–π') ||
                                                 bodyText.includes('–ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤');
                                
                                return hasNumbers && hasLabels;
                            }
                        """)
                        
                        if has_stats:
                            stats_loaded = True
                            print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
                            break
                        else:
                            await page.wait_for_timeout(1000)
                    except Exception as e:
                        await page.wait_for_timeout(1000)
                        continue
                
                if not stats_loaded:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                await page.wait_for_timeout(2000)
                
                # –ò—â–µ–º header –ø—Ä–æ—Ñ–∏–ª—è
                print(f"[PROXY-HEADER-SCREENSHOT] üîç –ò—â–µ–º header –ø—Ä–æ—Ñ–∏–ª—è...")
                
                # –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è header'–∞ –ø—Ä–æ—Ñ–∏–ª—è
                header_selectors = [
                    'header',
                    'header section',
                    'div[role="main"] header',
                    'main header'
                ]
                
                header_elem = None
                for selector in header_selectors:
                    try:
                        locator = page.locator(selector).first
                        await locator.wait_for(state="visible", timeout=5000)
                        header_elem = locator
                        print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ Header –Ω–∞–π–¥–µ–Ω: {selector}")
                        break
                    except:
                        continue
                
                if not header_elem:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è Header –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Å—å viewport")
                    # –ï—Å–ª–∏ header –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Å—å viewport
                    header_elem = None
                
                # –î–∞–µ–º –≤—Ä–µ–º—è Instagram –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ç–µ–º–Ω—É—é —Ç–µ–º—É - –û–¢–ö–õ–Æ–ß–ï–ù–û
                if dark_theme:
                    # –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
                    # print(f"[PROXY-HEADER-SCREENSHOT] üåô –û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã Instagram...")
                    # await page.wait_for_timeout(5000)  # 5 —Å–µ–∫—É–Ω–¥ - –¥–∞–µ–º –≤—Ä–µ–º—è Instagram –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É
                    # 
                    # # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
                    # dark_theme_verified = await page.evaluate("""
                    #     () => {
                    #         const body = document.body;
                    #         const computedStyle = window.getComputedStyle(body);
                    #         const bgColor = computedStyle.backgroundColor;
                    #         
                    #         // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–æ–Ω —Ç–µ–º–Ω—ã–π
                    #         const isDark = bgColor.includes('0, 0, 0') || bgColor.includes('#000') || bgColor.includes('rgb(0, 0, 0)');
                    #         return isDark;
                    #     }
                    # """)
                    # 
                    # result["dark_theme_applied"] = dark_theme_verified
                    # 
                    # if dark_theme_verified:
                    #     print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ Instagram –∞–∫—Ç–∏–≤–Ω–∞")
                    # else:
                    #     print(f"[PROXY-HEADER-SCREENSHOT] ‚ÑπÔ∏è  Instagram –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É")
                    result["dark_theme_applied"] = False
                    print(f"[PROXY-HEADER-SCREENSHOT] üåô –û–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã –û–¢–ö–õ–Æ–ß–ï–ù–û")
                else:
                    result["dark_theme_applied"] = False
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª—Å—è –ø–µ—Ä–µ–¥ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º
                print(f"[PROXY-FULL-SCREENSHOT] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
                try:
                    # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    await page.wait_for_selector("main", timeout=10000)
                    print(f"[PROXY-FULL-SCREENSHOT] ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω")
                except Exception as e:
                    print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                try:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø—É—Å—Ç–∞—è
                    body_text = await page.evaluate("document.body.innerText")
                    if len(body_text.strip()) < 10:
                        print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞–∂–µ—Ç—Å—è –ø—É—Å—Ç–æ–π, –∂–¥–µ–º –µ—â–µ...")
                        await page.wait_for_timeout(5000)
                        
                        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                        print(f"[PROXY-FULL-SCREENSHOT] üìú –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
                        await page.evaluate("window.scrollTo(0, 500)")
                        await page.wait_for_timeout(2000)
                        await page.evaluate("window.scrollTo(0, 0)")
                        await page.wait_for_timeout(2000)
                except Exception as e:
                    print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç: {e}")
                
                # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ (viewport)
                print(f"[PROXY-FULL-SCREENSHOT] üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏...")
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä viewport 1920x1080
                print(f"[PROXY-FULL-SCREENSHOT] üìê –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä viewport: 1920x1080")
                
                # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ viewport —á–µ—Ä–µ–∑ JavaScript –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–ª—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –Ω–∞ Linux
                print(f"[PROXY-FULL-SCREENSHOT] üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ viewport 1920x1080...")
                try:
                    await page.evaluate("""
                        () => {
                            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞ –∏ viewport
                            window.innerWidth = 1920;
                            window.innerHeight = 1080;
                            window.outerWidth = 1920;
                            window.outerHeight = 1080;
                            
                            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã document
                            document.documentElement.style.width = '1920px';
                            document.documentElement.style.height = '1080px';
                            document.body.style.width = '1920px';
                            document.body.style.height = '1080px';
                            
                            console.log('‚úÖ Viewport —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ: 1920x1080');
                        }
                    """)
                    
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
                    await page.wait_for_timeout(1000)
                    print(f"[PROXY-FULL-SCREENSHOT] ‚úÖ Viewport —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ")
                except Exception as e:
                    print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å viewport –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ: {e}")
                
                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                print(f"[PROXY-FULL-SCREENSHOT] ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
                await page.wait_for_timeout(3000)
                
                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                print(f"[PROXY-FULL-SCREENSHOT] üñºÔ∏è –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
                try:
                    await page.wait_for_load_state('networkidle', timeout=10000)
                    print(f"[PROXY-FULL-SCREENSHOT] ‚úÖ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
                except Exception as e:
                    print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –ù–µ –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å: {e}")
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
                await page.wait_for_timeout(2000)
                
                try:
                    # –°–∫—Ä–∏–Ω—à–æ—Ç —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ (viewport 1920x1080)
                    await page.screenshot(path=screenshot_path, full_page=False)
                    print(f"[PROXY-FULL-SCREENSHOT] ‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ (viewport: 1920x1080)")
                except Exception as e:
                    print(f"[PROXY-FULL-SCREENSHOT] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
                    result["error"] = f"screenshot_failed: {str(e)}"
                    result["exists"] = False
                    await browser.close()
                    return result
                
                # –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –±–µ–∑ –æ–±—Ä–µ–∑–∫–∏
                if os.path.exists(screenshot_path):
                    try:
                        from PIL import Image
                        
                        img = Image.open(screenshot_path)
                        width, height = img.size
                        
                        # –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –±–µ–∑ –æ–±—Ä–µ–∑–∫–∏
                        size = os.path.getsize(screenshot_path) / 1024
                        print(f"[PROXY-FULL-SCREENSHOT] üì∏ –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç: {width}x{height}")
                        print(f"[PROXY-FULL-SCREENSHOT] üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size:.1f} KB")
                        
                        result["cropped_sides"] = False
                        result["original_width"] = width
                        result["final_width"] = width
                        
                    except ImportError:
                        print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç")
                        result["cropped_sides"] = False
                    except Exception as size_error:
                        print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞: {size_error}")
                        result["cropped_sides"] = False
                
                # –ü–û–õ–ù–´–ô –°–ö–†–ò–ù–®–û–¢: –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–µ–∑ –æ–±—Ä–µ–∑–∫–∏
                if os.path.exists(screenshot_path):
                    try:
                        from PIL import Image
                        
                        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        img = Image.open(screenshot_path)
                        width, height = img.size
                        
                        # –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –±–µ–∑ –æ–±—Ä–µ–∑–∫–∏
                        size = os.path.getsize(screenshot_path) / 1024
                        print(f"[PROXY-FULL-SCREENSHOT] üì∏ –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {width}x{height}")
                        print(f"[PROXY-FULL-SCREENSHOT] üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size:.1f} KB")
                        
                        result["cropped"] = False
                        result["original_size"] = f"{width}x{height}"
                        result["final_size"] = f"{width}x{height}"
                        
                    except ImportError:
                        print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç")
                        result["cropped"] = False
                    except Exception as size_error:
                        print(f"[PROXY-FULL-SCREENSHOT] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞: {size_error}")
                        result["cropped"] = False
                
                if os.path.exists(screenshot_path):
                    size = os.path.getsize(screenshot_path) / 1024
                    print(f"[PROXY-FULL-SCREENSHOT] ‚úÖ –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω: {size:.1f} KB")
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–µ–ª—ã–π —Å–∫—Ä–∏–Ω
                    try:
                        from PIL import Image
                        import numpy as np
                        
                        img = Image.open(screenshot_path)
                        img_array = np.array(img.convert('RGB'))
                        
                        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω—é—é —è—Ä–∫–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        mean_brightness = np.mean(img_array)
                        
                        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (–¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ—Å—Ç–∏)
                        std_brightness = np.std(img_array)
                        
                        print(f"[PROXY-HEADER-SCREENSHOT] üìä –°—Ä–µ–¥–Ω—è—è —è—Ä–∫–æ—Å—Ç—å: {mean_brightness:.2f}, –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: {std_brightness:.2f}")
                        
                        # –û–ß–ï–ù–¨ –°–¢–†–û–ì–ê–Ø –ø—Ä–æ–≤–µ—Ä–∫–∞: —è—Ä–∫–æ—Å—Ç—å >230 –∏ std <30 –ò–õ–ò —è—Ä–∫–æ—Å—Ç—å >245 –∏ std <35
                        is_white_screen = (mean_brightness > 230 and std_brightness < 30) or (mean_brightness > 245 and std_brightness < 35)
                        
                        if is_white_screen:
                            print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù –ë–ï–õ–´–ô –°–ö–†–ò–ù! –Ø—Ä–∫–æ—Å—Ç—å: {mean_brightness:.2f}, Std: {std_brightness:.2f}")
                            
                            # –î–µ–ª–∞–µ–º –ú–ù–û–ì–û –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è (–¥–æ 5 —Ä–∞–∑)
                            max_retries = 5
                            screenshot_fixed = False
                            
                            for retry_attempt in range(max_retries):
                                print(f"[PROXY-HEADER-SCREENSHOT] üîÑ –ü–æ–ø—ã—Ç–∫–∞ {retry_attempt + 1}/{max_retries} –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...")
                                
                                # –ñ–¥–µ–º –µ—â–µ –¥–æ–ª—å—à–µ
                                await page.wait_for_timeout(5000)
                                
                                # –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–û–ï —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
                                print(f"[PROXY-HEADER-SCREENSHOT] üö™ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–û–ï —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...")
                                try:
                                    for _ in range(20):
                                        await page.keyboard.press("Escape")
                                        await page.wait_for_timeout(100)
                                except:
                                    pass
                                
                                # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
                                await page.evaluate("window.scrollTo(0, 500)")
                                await page.wait_for_timeout(1000)
                                await page.evaluate("window.scrollTo(0, 0)")
                                await page.wait_for_timeout(2000)
                                
                                # –ï—â–µ —Ä–∞–∑ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ —É–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ —á–µ—Ä–µ–∑ JavaScript
                                await page.evaluate("""
                                    () => {
                                        // –£–¥–∞–ª—è–µ–º –≤—Å–µ overlay, modal, dialog —ç–ª–µ–º–µ–Ω—Ç—ã
                                        document.querySelectorAll('[role="dialog"], [aria-modal="true"], [class*="modal"], [class*="Modal"], [class*="overlay"], [class*="Overlay"]').forEach(el => el.remove());
                                        
                                        // –£–¥–∞–ª—è–µ–º –±–µ–ª—ã–µ –±–ª–æ–∫–∏ –±–µ–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                                        document.querySelectorAll('div').forEach(el => {
                                            const style = window.getComputedStyle(el);
                                            if (style.backgroundColor === 'rgb(255, 255, 255)' && el.innerText.trim() === '') {
                                                const rect = el.getBoundingClientRect();
                                                if (rect.width > 200 && rect.height > 100) {
                                                    el.remove();
                                                }
                                            }
                                        });
                                        
                                        // –£–±–∏—Ä–∞–µ–º overflow hidden
                                        document.body.style.overflow = 'auto';
                                        document.documentElement.style.overflow = 'auto';
                                    }
                                """)
                                
                                await page.wait_for_timeout(1000)
                                
                                # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
                                await page.screenshot(path=screenshot_path, full_page=False)
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
                                img = Image.open(screenshot_path)
                                img_array = np.array(img.convert('RGB'))
                                mean_brightness = np.mean(img_array)
                                std_brightness = np.std(img_array)
                                
                                print(f"[PROXY-HEADER-SCREENSHOT] üìä –ü–æ–ø—ã—Ç–∫–∞ {retry_attempt + 1} - –Ø—Ä–∫–æ—Å—Ç—å: {mean_brightness:.2f}, Std: {std_brightness:.2f}")
                                
                                is_white_screen = (mean_brightness > 230 and std_brightness < 30) or (mean_brightness > 245 and std_brightness < 35)
                                
                                if not is_white_screen:
                                    print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –ü–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ {retry_attempt + 1} —Å–∫—Ä–∏–Ω —Å—Ç–∞–ª –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º!")
                                    screenshot_fixed = True
                                    break
                            
                            if not screenshot_fixed:
                                print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –ë–µ–ª—ã–π —Å–∫—Ä–∏–Ω –æ—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ {max_retries} –ø–æ–ø—ã—Ç–æ–∫")
                                result["error"] = "white_screen_detected"
                                result["exists"] = False
                                await browser.close()
                                return result
                        else:
                            print(f"[PROXY-HEADER-SCREENSHOT] ‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π (–Ω–µ –±–µ–ª—ã–π)")
                    
                    except ImportError:
                        print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è PIL –∏–ª–∏ numpy –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ–ª–æ–≥–æ —Å–∫—Ä–∏–Ω–∞")
                    except Exception as check_error:
                        print(f"[PROXY-HEADER-SCREENSHOT] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–ª–æ–≥–æ —Å–∫—Ä–∏–Ω–∞: {check_error}")
                    
                    result["screenshot_path"] = screenshot_path
                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º exists = True –µ—Å–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å Proxy
                    result["exists"] = True
                    print(f"[PROXY-FULL-SCREENSHOT] üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –∞–∫–∫–∞—É–Ω—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∞–π–¥–µ–Ω–Ω—ã–º")
                else:
                    print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
                    result["error"] = "screenshot_failed"
                    result["exists"] = False
                
                await browser.close()
                
            except PWTimeoutError as e:
                print(f"[PROXY-HEADER-SCREENSHOT] ‚è±Ô∏è Timeout: {e}")
                result["error"] = f"timeout: {e}"
                await browser.close()
                
            except Exception as e:
                print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –û—à–∏–±–∫–∞: {e}")
                result["error"] = str(e)
                await browser.close()
    
    except Exception as e:
        print(f"[PROXY-HEADER-SCREENSHOT] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        result["error"] = str(e)
    
    return result