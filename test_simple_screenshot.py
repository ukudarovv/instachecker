#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ Instagram –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ proxy.
–ë–µ–∑ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫, —Ç–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—à–æ—Ç.
"""

import asyncio
import os
from datetime import datetime
from project.services.ig_screenshot import check_account_with_header_screenshot

async def test_simple_screenshot():
    """–¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ proxy."""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    username = "ukudarov"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π username
    proxy_url = "http://proxy:port"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à proxy
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = "screenshots"
    os.makedirs(screenshots_dir, exist_ok=True)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    screenshot_path = os.path.join(screenshots_dir, f"test_{username}_{timestamp}.png")
    
    print(f"üß™ –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–ª—è @{username}")
    print(f"üåê Proxy: {proxy_url}")
    print(f"üì∏ –ü—É—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {screenshot_path}")
    print("-" * 50)
    
    try:
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        result = await check_account_with_header_screenshot(
            username=username,
            proxy_url=proxy_url,
            screenshot_path=screenshot_path,
            headless=True,
            timeout_ms=60000,  # 60 —Å–µ–∫—É–Ω–¥
            dark_theme=True,   # –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
            mobile_emulation=False,  # Desktop —Ñ–æ—Ä–º–∞—Ç
            crop_ratio=0  # –ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
        )
        
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê:")
        print("=" * 50)
        
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print(f"üë§ Username: {result.get('username', 'N/A')}")
        print(f"‚úÖ Exists: {result.get('exists', 'N/A')}")
        print(f"üì∏ Screenshot: {result.get('screenshot_path', 'N/A')}")
        print(f"‚ùå Error: {result.get('error', 'None')}")
        print(f"‚ö†Ô∏è Warning: {result.get('warning', 'None')}")
        print(f"üîß Checked via: {result.get('checked_via', 'N/A')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        if result.get('screenshot_path') and os.path.exists(result['screenshot_path']):
            file_size = os.path.getsize(result['screenshot_path']) / 1024
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.1f} KB")
            print(f"‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        
        print("=" * 50)
        
        return result
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return None

async def test_multiple_accounts():
    """–¢–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤."""
    
    # –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    accounts = [
        "ukudarov",
        "instagram", 
        "test_account"
    ]
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ proxy (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    proxy_url = "http://proxy:port"
    
    print(f"üß™ –¢–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è {len(accounts)} –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print(f"üåê Proxy: {proxy_url}")
    print("=" * 50)
    
    results = []
    
    for i, username in enumerate(accounts, 1):
        print(f"\n[{i}/{len(accounts)}] –¢–µ—Å—Ç–∏—Ä—É–µ–º @{username}...")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
        screenshots_dir = "screenshots"
        os.makedirs(screenshots_dir, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        screenshot_path = os.path.join(screenshots_dir, f"test_{username}_{timestamp}.png")
        
        try:
            result = await check_account_with_header_screenshot(
                username=username,
                proxy_url=proxy_url,
                screenshot_path=screenshot_path,
                headless=True,
                timeout_ms=60000,
                dark_theme=True,
                mobile_emulation=False,
                crop_ratio=0
            )
            
            results.append({
                'username': username,
                'success': result.get('exists', False),
                'screenshot': result.get('screenshot_path'),
                'error': result.get('error')
            })
            
            print(f"  ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('exists', False)}")
            if result.get('screenshot_path'):
                print(f"  üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {result.get('screenshot_path')}")
            if result.get('error'):
                print(f"  ‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
                
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
            results.append({
                'username': username,
                'success': False,
                'screenshot': None,
                'error': str(e)
            })
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    print("=" * 50)
    
    successful = sum(1 for r in results if r['success'])
    total = len(results)
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {successful}/{total}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö: {total - successful}/{total}")
    
    for result in results:
        status = "‚úÖ" if result['success'] else "‚ùå"
        print(f"{status} @{result['username']}: {result['error'] or 'OK'}")
    
    return results

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ Instagram –ø—Ä–æ—Ñ–∏–ª–µ–π")
    print("=" * 50)
    
    # –í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç
    test_choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:\n1. –û–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç\n2. –ù–µ—Å–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1 –∏–ª–∏ 2): ").strip()
    
    if test_choice == "1":
        # –¢–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
        username = input("–í–≤–µ–¥–∏—Ç–µ username –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ").strip()
        if username:
            # –û–±–Ω–æ–≤–ª—è–µ–º username –≤ —Ñ—É–Ω–∫—Ü–∏–∏
            import sys
            sys.modules[__name__].test_simple_screenshot.__code__ = test_simple_screenshot.__code__.replace(
                b"ukudarov", username.encode()
            )
        
        asyncio.run(test_simple_screenshot())
    elif test_choice == "2":
        # –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        asyncio.run(test_multiple_accounts())
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞...")
        asyncio.run(test_simple_screenshot())
