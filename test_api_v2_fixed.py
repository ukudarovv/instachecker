#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ api-v2.
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.join(os.path.dirname(__file__), 'project'))

from project.services.api_v2_proxy_checker import check_account_via_api_v2_proxy
from project.models import User, Account
from project.config import get_settings
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

async def test_api_v2_fixed():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ api-v2"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    settings = get_settings()
    engine = create_engine(settings.db_url)
    SessionLocal = sessionmaker(bind=engine)
    
    with SessionLocal() as session:
        print("üîß –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ api-v2")
        print("=" * 60)
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        test_user = session.query(User).filter(User.id == 1).first()
        if not test_user:
            print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.id}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–∫–∫–∞—É–Ω—Ç
        username = "ukudarov"
        print(f"\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ @{username}...")
        
        try:
            result = await check_account_via_api_v2_proxy(
                session=session,
                user_id=test_user.id,
                username=username
            )
            
            print(f"üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(f"   ‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {result.get('exists')}")
            print(f"   üìõ –ò–º—è: {result.get('full_name', 'N/A')}")
            print(f"   üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {result.get('followers', 'N/A')}")
            print(f"   üë• –ü–æ–¥–ø–∏—Å–∫–∏: {result.get('following', 'N/A')}")
            print(f"   üì∏ –ü–æ—Å—Ç—ã: {result.get('posts', 'N/A')}")
            print(f"   üîó –ü—Ä–æ–∫—Å–∏: {result.get('proxy_used', 'N/A')}")
            print(f"   üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {result.get('screenshot_path', 'N/A')}")
            print(f"   ‚ùó –û—à–∏–±–∫–∞: {result.get('error', 'N/A')}")
            print(f"   üîç –ú–µ—Ç–æ–¥: {result.get('checked_via', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π
            account = session.query(Account).filter(
                Account.user_id == test_user.id,
                Account.account == username
            ).first()
            
            if account and account.done:
                print(f"   ‚úÖ –ê–∫–∫–∞—É–Ω—Ç –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π: {account.done}")
                print(f"   üìÖ –î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {account.date_of_finish}")
            else:
                print(f"   ‚ùå –ê–∫–∫–∞—É–Ω—Ç –ù–ï –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            if result.get('screenshot_path') and os.path.exists(result['screenshot_path']):
                file_size = os.path.getsize(result['screenshot_path'])
                print(f"   üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω: {result['screenshot_path']} ({file_size} bytes)")
            else:
                print(f"   ‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
                
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()
        
        print(f"\n" + "=" * 60)
        print("üéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_api_v2_fixed())
