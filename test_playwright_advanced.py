#!/usr/bin/env python3
"""
üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π Playwright —Å–∏—Å—Ç–µ–º—ã
"""

import asyncio
import sys
import os
from datetime import datetime

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from project.services.instagram_playwright_advanced import check_account_with_playwright_advanced
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)


async def test_advanced(username: str, proxy: str = None):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π Playwright —Å–∏—Å—Ç–µ–º—ã."""
    
    print("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print("‚ïë                                                                               ‚ïë")
    print("‚ïë          üé≠ PLAYWRIGHT ADVANCED - –¢–ï–°–¢  üé≠                                   ‚ïë")
    print("‚ïë                                                                               ‚ïë")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")
    print()
    
    print("=" * 80)
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π Playwright —Å–∏—Å—Ç–µ–º—ã –¥–ª—è @{username}")
    if proxy:
        if '@' in proxy:
            proxy_display = proxy.split('@')[0].split(':')[0] + ':***@' + proxy.split('@')[1]
        else:
            proxy_display = proxy
        print(f"üîó –ü—Ä–æ–∫—Å–∏: {proxy_display}")
    else:
        print("üîó –ü—Ä–æ–∫—Å–∏: –ù–µ —É–∫–∞–∑–∞–Ω")
    print("=" * 80)
    print()
    
    # –ü—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    screenshot_dir = "screenshots"
    os.makedirs(screenshot_dir, exist_ok=True)
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    screenshot_path = os.path.join(screenshot_dir, f"playwright_adv_{username}_{timestamp}.png")
    
    print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot_path}")
    print()
    
    print("üß™ –ó–ê–ü–£–°–ö –ü–†–û–î–í–ò–ù–£–¢–û–ô PLAYWRIGHT –ü–†–û–í–ï–†–ö–ò")
    print("-" * 80)
    
    try:
        result = await check_account_with_playwright_advanced(
            username=username,
            screenshot_path=screenshot_path,
            headless=True,
            max_retries=2,
            proxy=proxy
        )
        
        print()
        print("=" * 80)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("=" * 80)
        
        print(f"\nüéØ –ü—Ä–æ—Ñ–∏–ª—å: @{username}")
        
        if result.get("exists") is True:
            print("‚úÖ –°—Ç–∞—Ç—É—Å: –ü–†–û–§–ò–õ–¨ –ù–ê–ô–î–ï–ù")
            if result.get("is_private"):
                print("üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å: –ó–ê–ö–†–´–¢–´–ô –ê–ö–ö–ê–£–ù–¢")
            elif result.get("is_private") is False:
                print("üîì –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å: –û–¢–ö–†–´–¢–´–ô –ê–ö–ö–ê–£–ù–¢")
        elif result.get("exists") is False:
            print("‚ùå –°—Ç–∞—Ç—É—Å: –ü–†–û–§–ò–õ–¨ –ù–ï –ù–ê–ô–î–ï–ù")
        else:
            print("‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: –ù–ï–ò–ó–í–ï–°–¢–ï–ù")
        
        print(f"\nüîó –ü—Ä–æ–∫—Å–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: {result.get('proxy_used', False)}")
        print(f"üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: {result.get('status_code', 'N/A')}")
        print(f"üåê –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —á–µ—Ä–µ–∑: {result.get('checked_via', 'N/A')}")
        
        print(f"\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–∑–¥–∞–Ω: {result.get('screenshot_created', False)}")
        if result.get("screenshot_path"):
            if os.path.exists(result["screenshot_path"]):
                size = os.path.getsize(result["screenshot_path"])
                print(f"üìÅ –ü—É—Ç—å: {result['screenshot_path']}")
                print(f"üìè –†–∞–∑–º–µ—Ä: {size} –±–∞–π—Ç ({size/1024:.1f} KB)")
                
                if size > 50000:
                    print("‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ: –û–¢–õ–ò–ß–ù–û–ï")
                elif size > 20000:
                    print("‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ: –•–û–†–û–®–ï–ï")
                else:
                    print("‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ: –ù–ò–ó–ö–û–ï")
        
        if result.get("error"):
            print(f"\n‚ö†Ô∏è –û—à–∏–±–∫–∞: {result['error']}")
        
        print()
        print("=" * 80)
        print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        print("=" * 80)
        
        print("\nüí° –û–°–û–ë–ï–ù–ù–û–°–¢–ò –ü–†–û–î–í–ò–ù–£–¢–û–ô –°–ò–°–¢–ï–ú–´:")
        print("‚úÖ –°—Ç–µ–ª—Å-—Ä–µ–∂–∏–º (—Å–∫—Ä—ã—Ç–∏–µ WebDriver)")
        print("‚úÖ –≠–º—É–ª—è—Ü–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è")
        print("‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤")
        print("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è")
        print("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏")
        print("‚úÖ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω")
        
        return result
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return None


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_playwright_advanced.py <username> [proxy]")
        print("\n–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python test_playwright_advanced.py gid_halal")
        print("  python test_playwright_advanced.py gid_halal http://user:pass@host:port")
        print("\nüé≠ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã:")
        print("  - –°—Ç–µ–ª—Å-—Ä–µ–∂–∏–º (–æ–±—Ö–æ–¥ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è)")
        print("  - –≠–º—É–ª—è—Ü–∏—è —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è")
        print("  - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è")
        print("  - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        sys.exit(1)
    
    username = sys.argv[1]
    proxy = sys.argv[2] if len(sys.argv) > 2 else None
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π Playwright –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è @{username}")
    if proxy:
        print(f"üîó –° –ø—Ä–æ–∫—Å–∏")
    print(f"üé≠ –°–æ –≤—Å–µ–º–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏")
    print()
    
    result = asyncio.run(test_advanced(username, proxy))
    
    if result and result.get("exists") is True:
        sys.exit(0)
    elif result and result.get("exists") is False:
        sys.exit(1)
    else:
        sys.exit(2)


if __name__ == "__main__":
    main()




