"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç header-—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
"""

import asyncio
import os
import sys
from pathlib import Path

# Add project to path
sys.path.insert(0, str(Path(__file__).parent))

from project.services.ig_screenshot import check_account_with_header_screenshot
from project.database import get_session_factory, init_db
from project.models import Proxy


async def test_header_dark_fixed():
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç header-—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π"""
    
    print("=" * 80)
    print("üß™ –£–õ–£–ß–®–ï–ù–ù–´–ô –¢–ï–°–¢: Header-—Å–∫—Ä–∏–Ω—à–æ—Ç —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)")
    print("=" * 80)
    print()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    from project.database import get_engine
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å –∫ –±–∞–∑–µ
    db_url = "sqlite:///bot.db"
    engine = get_engine(db_url)
    init_db(engine)
    session_factory = get_session_factory(engine)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –∏–∑ –±–∞–∑—ã
    with session_factory() as session:
        proxy = session.query(Proxy).filter(
            Proxy.is_active == True
        ).first()
        
        if not proxy:
            print("\n‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
            print("   –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç add_test_proxy.py")
            return False
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º proxy URL
        if proxy.username and proxy.password:
            proxy_url = f"{proxy.scheme}://{proxy.username}:{proxy.password}@{proxy.host}"
        else:
            proxy_url = f"{proxy.scheme}://{proxy.host}"
        
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–∞:")
        print(f"   Username: @instagram")
        print(f"   Proxy: {proxy.scheme}://{proxy.host}")
        print(f"   Headless: True")
        print(f"   Dark theme: True (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ Instagram)")
        print(f"   Crop to header: False (—Å–∫—Ä–∏–Ω—à–æ—Ç –¢–û–õ–¨–ö–û header —ç–ª–µ–º–µ–Ω—Ç–∞)")
        print(f"   –û–∂–∏–¥–∞–Ω–∏–µ: –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (~20 —Å–µ–∫—É–Ω–¥)")
        print()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π username (–ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å)
    test_username = "instagram"  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = "screenshots"
    os.makedirs(screenshots_dir, exist_ok=True)
    
    # –ü—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    screenshot_path = os.path.join(screenshots_dir, f"test_header_dark_FIXED_{test_username}.png")
    
    print(f"üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ò–°–ü–†–ê–í–õ–ï–ù–ù–£–Æ –ø—Ä–æ–≤–µ—Ä–∫—É...")
    print()
    
    try:
        result = await check_account_with_header_screenshot(
            username=test_username,
            proxy_url=proxy_url,
            screenshot_path=screenshot_path,
            headless=True,  # üîí –§–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º
            timeout_ms=60000,
            dark_theme=True,  # ‚úÖ –° —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π
            mobile_emulation=True,  # üì± –ú–æ–±–∏–ª—å–Ω–∞—è —ç–º—É–ª—è—Ü–∏—è (iPhone 12)
            crop_ratio=0  # ‚úÇÔ∏è –ë–ï–ó –æ–±—Ä–µ–∑–∫–∏ - —Å–∫—Ä–∏–Ω—à–æ—Ç header —ç–ª–µ–º–µ–Ω—Ç–∞
        )
        
        print()
        print("=" * 80)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –£–õ–£–ß–®–ï–ù–ù–û–ì–û –¢–ï–°–¢–ê")
        print("=" * 80)
        print(f"‚úÖ –£—Å–ø–µ—Ö: {result.get('exists')}")
        print(f"üìù Checked via: {result.get('checked_via')}")
        print(f"üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞: {result.get('dark_theme_applied', False)}")
        print(f"üì± –ú–æ–±–∏–ª—å–Ω–∞—è —ç–º—É–ª—è—Ü–∏—è: {result.get('mobile_emulation', False)}")
        print(f"‚úÇÔ∏è  –û–±—Ä–µ–∑–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {result.get('cropped', False)}")
        
        if result.get('original_size') and result.get('final_size'):
            print(f"üìè –†–∞–∑–º–µ—Ä: {result.get('original_size')} ‚Üí {result.get('final_size')}")
        
        print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {result.get('screenshot_path')}")
        
        if result.get('error'):
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞: {result.get('error')}")
        
        screenshot = result.get('screenshot_path')
        if screenshot and os.path.exists(screenshot):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            size = os.path.getsize(screenshot) / 1024  # KB
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size:.1f} KB")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            try:
                from PIL import Image
                img = Image.open(screenshot)
                width, height = img.size
                print(f"üñºÔ∏è  –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {width}x{height} px")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–µ—Ä–Ω—ã–π –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã)
                # –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∏–∫—Å–µ–ª–µ–π –∏–∑ —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç
                test_pixels = [
                    (10, 10),      # –í–µ—Ä—Ö–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª
                    (width//2, 10), # –í–µ—Ä—Ö–Ω–∏–π —Ü–µ–Ω—Ç—Ä
                    (width-10, 10), # –í–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª
                    (10, height//2), # –õ–µ–≤—ã–π —Ü–µ–Ω—Ç—Ä
                    (width//2, height//2) # –¶–µ–Ω—Ç—Ä
                ]
                
                dark_pixels = 0
                total_pixels = len(test_pixels)
                
                print(f"üé® –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –≤ {total_pixels} —Ç–æ—á–∫–∞—Ö:")
                for i, (x, y) in enumerate(test_pixels):
                    if x < width and y < height:
                        pixel = img.getpixel((x, y))
                        if isinstance(pixel, tuple) and len(pixel) >= 3:
                            r, g, b = pixel[0], pixel[1], pixel[2]
                            avg_brightness = (r + g + b) / 3
                            
                            is_dark = avg_brightness < 50  # –¢–µ–º–Ω—ã–π –ø–∏–∫—Å–µ–ª—å
                            if is_dark:
                                dark_pixels += 1
                            
                            status = "üåô –¢–ï–ú–ù–´–ô" if is_dark else "‚òÄÔ∏è –°–í–ï–¢–õ–´–ô"
                            print(f"   –¢–æ—á–∫–∞ {i+1}: RGB({r:3d},{g:3d},{b:3d}) —è—Ä–∫–æ—Å—Ç—å={avg_brightness:3.0f} {status}")
                
                dark_percentage = (dark_pixels / total_pixels) * 100
                print(f"üìä –¢–µ–º–Ω—ã—Ö –ø–∏–∫—Å–µ–ª–µ–π: {dark_pixels}/{total_pixels} ({dark_percentage:.0f}%)")
                
                if dark_percentage >= 60:
                    print()
                    print("‚úÖ –£–°–ü–ï–•: –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (–±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–∏–∫—Å–µ–ª–µ–π —Ç–µ–º–Ω—ã–µ)")
                else:
                    print()
                    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∞—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é")
                    print(f"   –¢–æ–ª—å–∫–æ {dark_percentage:.0f}% –ø–∏–∫—Å–µ–ª–µ–π —Ç–µ–º–Ω—ã–µ (–æ–∂–∏–¥–∞–µ—Ç—Å—è >60%)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ header (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –≤—ã—Å–æ—Ç—ã)
                if height < 400:
                    print(f"‚úÖ –£–°–ü–ï–•: –°–∫—Ä–∏–Ω—à–æ—Ç header'–∞ (–≤—ã—Å–æ—Ç–∞ {height}px)")
                elif height < 600:
                    print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–∫—Ä–∏–Ω—à–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∏–º (–≤—ã—Å–æ—Ç–∞ {height}px)")
                else:
                    print(f"‚ùå –û–®–ò–ë–ö–ê: –°–∫—Ä–∏–Ω—à–æ—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–≤—ã—Å–æ—Ç–∞ {height}px)")
                    print(f"   –û–∂–∏–¥–∞–µ—Ç—Å—è <400px –¥–ª—è header'–∞")
                    
            except ImportError:
                print("‚ö†Ô∏è  PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
                print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install Pillow")
            except Exception as e:
                print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            
            print()
            print(f"üìÇ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot}")
            print(f"   –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
            print(f"   1. –í–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ header –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –≤–µ—Å—å –ø—Ä–æ—Ñ–∏–ª—å)")
            print(f"   2. –§–æ–Ω —á–µ—Ä–Ω—ã–π (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)")
            print(f"   3. –¢–µ–∫—Å—Ç –±–µ–ª—ã–π")
            print(f"   4. –†–∞–∑–º–µ—Ä –Ω–µ–±–æ–ª—å—à–æ–π (~200-400px –≤—ã—Å–æ—Ç–∞)")
        else:
            print()
            print("‚ùå –û–®–ò–ë–ö–ê: –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        
        print()
        print("=" * 80)
        
        return result.get('exists') is True
        
    except Exception as e:
        print()
        print("=" * 80)
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        print("=" * 80)
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    print()
    print("üöÄ –ó–∞–ø—É—Å–∫ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û —Ç–µ—Å—Ç–∞ header-—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π...")
    print()
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
    print("   ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ (–±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è)")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–µ–∑–∫–∞ –¥–æ 25% –≤–µ—Ä—Ö–∞")
    print("   ‚Ä¢ –ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π")
    print("   ‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
    print()
    
    result = asyncio.run(test_header_dark_fixed())
    
    print()
    if result:
        print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print()
        print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç:")
        print("   ‚Ä¢ –¢–æ–ª—å–∫–æ header –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –≤–µ—Å—å –ø—Ä–æ—Ñ–∏–ª—å)")
        print("   ‚Ä¢ –ß–µ—Ä–Ω—ã–π —Ñ–æ–Ω (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)")
        print("   ‚Ä¢ –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç")
        print("   ‚Ä¢ –ù–µ–±–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä (~200-400px –≤—ã—Å–æ—Ç–∞)")
    else:
        print("‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏")
        print()
        print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PIL: pip install Pillow")
        print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π")
    print()
