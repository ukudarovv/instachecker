"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ header'–∞ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π —á–µ—Ä–µ–∑ proxy –ë–ï–ó IG —Å–µ—Å—Å–∏–∏.
"""

import asyncio
import os
import sys
from pathlib import Path

# Add project to path
sys.path.insert(0, str(Path(__file__).parent))

from project.services.ig_screenshot import check_account_with_header_screenshot
from project.database import get_session_factory, init_db
from project.models import Proxy


async def test_header_screenshot_with_proxy():
    """–¢–µ—Å—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ header'–∞ —á–µ—Ä–µ–∑ proxy —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π"""
    
    print("=" * 70)
    print("üß™ –¢–ï–°–¢: –°–∫—Ä–∏–Ω—à–æ—Ç header'–∞ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ proxy —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π")
    print("=" * 70)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    from project.database import get_engine
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å –∫ –±–∞–∑–µ
    db_url = "sqlite:///bot.db"
    engine = get_engine(db_url)
    init_db(engine)
    session_factory = get_session_factory(engine)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –∏–∑ –±–∞–∑—ã
    with session_factory() as session:
        proxy = session.query(Proxy).filter(
            Proxy.is_active == True
        ).first()
        
        if not proxy:
            print("\n‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
            print("   –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç add_test_proxy.py")
            return False
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º proxy URL
        if proxy.username and proxy.password:
            proxy_url = f"{proxy.scheme}://{proxy.username}:{proxy.password}@{proxy.host}"
        else:
            proxy_url = f"{proxy.scheme}://{proxy.host}"
        
        print(f"\nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–∞:")
        print(f"   Username: @instagram")
        print(f"   Proxy: {proxy.scheme}://{proxy.host}")
        print(f"   Headless: True")
        print(f"   Dark theme: True")
        print()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π username (–ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å)
    test_username = "instagram"  # –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    screenshots_dir = "screenshots"
    os.makedirs(screenshots_dir, exist_ok=True)
    
    # –ü—É—Ç—å –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    screenshot_path = os.path.join(screenshots_dir, f"test_header_dark_{test_username}.png")
    
    print(f"üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É...")
    print()
    
    try:
        result = await check_account_with_header_screenshot(
            username=test_username,
            proxy_url=proxy_url,
            screenshot_path=screenshot_path,
            headless=True,
            timeout_ms=60000,
            dark_theme=True  # –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ (—á–µ—Ä–Ω—ã–π —Ñ–æ–Ω)
        )
        
        print()
        print("=" * 70)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê")
        print("=" * 70)
        print(f"‚úÖ –£—Å–ø–µ—Ö: {result.get('exists')}")
        print(f"üìù Checked via: {result.get('checked_via')}")
        print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {result.get('screenshot_path')}")
        
        if result.get('error'):
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞: {result.get('error')}")
        
        screenshot = result.get('screenshot_path')
        if screenshot and os.path.exists(screenshot):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            size = os.path.getsize(screenshot) / 1024  # KB
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size:.1f} KB")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            try:
                from PIL import Image
                img = Image.open(screenshot)
                width, height = img.size
                print(f"üñºÔ∏è  –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {width}x{height} px")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–µ—Ä–Ω—ã–π –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã)
                # –ü–æ–ª—É—á–∞–µ–º –ø–∏–∫—Å–µ–ª—å –∏–∑ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ª–µ–≤–æ–≥–æ —É–≥–ª–∞
                pixel = img.getpixel((10, 10))
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ–Ω —Ç–µ–º–Ω—ã–π (–±–ª–∏–∑–∫–æ –∫ —á–µ—Ä–Ω–æ–º—É)
                if isinstance(pixel, tuple) and len(pixel) >= 3:
                    r, g, b = pixel[0], pixel[1], pixel[2]
                    avg_brightness = (r + g + b) / 3
                    
                    print(f"üé® –¶–≤–µ—Ç —Ñ–æ–Ω–∞ (RGB): ({r}, {g}, {b})")
                    print(f"üí° –Ø—Ä–∫–æ—Å—Ç—å —Ñ–æ–Ω–∞: {avg_brightness:.1f}/255")
                    
                    if avg_brightness < 50:  # –¢–µ–º–Ω—ã–π —Ñ–æ–Ω
                        print()
                        print("‚úÖ –£–°–ü–ï–•: –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ (—á–µ—Ä–Ω—ã–π —Ñ–æ–Ω)")
                    else:
                        print()
                        print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –§–æ–Ω –Ω–µ —á–µ—Ä–Ω—ã–π (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∞—Å—å?)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ header (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –≤—ã—Å–æ—Ç—ã)
                if height < 600:
                    print(f"‚úÖ –£–°–ü–ï–•: –°–∫—Ä–∏–Ω—à–æ—Ç header'–∞ (–≤—ã—Å–æ—Ç–∞ {height}px)")
                else:
                    print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–∫—Ä–∏–Ω—à–æ—Ç –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –ø–æ–ª–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–≤—ã—Å–æ—Ç–∞ {height}px)")
                    
            except ImportError:
                print("‚ö†Ô∏è  PIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            
            print()
            print(f"üìÇ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot}")
            print(f"   –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ:")
            print(f"   1. –í–∏–¥–µ–Ω —Ç–æ–ª—å–∫–æ header –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –≤–µ—Å—å –ø—Ä–æ—Ñ–∏–ª—å)")
            print(f"   2. –§–æ–Ω —á–µ—Ä–Ω—ã–π (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)")
            print(f"   3. –¢–µ–∫—Å—Ç –±–µ–ª—ã–π")
        else:
            print()
            print("‚ùå –û–®–ò–ë–ö–ê: –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω!")
        
        print()
        print("=" * 70)
        
        return result.get('exists') is True
        
    except Exception as e:
        print()
        print("=" * 70)
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        print("=" * 70)
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    print()
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ header'–∞ —Å —Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π —á–µ—Ä–µ–∑ proxy...")
    print()
    
    result = asyncio.run(test_header_screenshot_with_proxy())
    
    print()
    if result:
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print()
        print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç:")
        print("   ‚Ä¢ –¢–æ–ª—å–∫–æ header –ø—Ä–æ—Ñ–∏–ª—è (–Ω–µ –≤–µ—Å—å –ø—Ä–æ—Ñ–∏–ª—å)")
        print("   ‚Ä¢ –ß–µ—Ä–Ω—ã–π —Ñ–æ–Ω (—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞)")
        print("   ‚Ä¢ –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç")
    else:
        print("‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏")
    print()

