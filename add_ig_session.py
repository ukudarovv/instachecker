#!/usr/bin/env python3
"""
–§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Instagram —Å–µ—Å—Å–∏–∏ —Å –ª–æ–≥–∏–Ω–æ–º, –ø–∞—Ä–æ–ª–µ–º –∏ –∫—É–∫–∞–º–∏
"""

import sys
sys.path.append('project')
from models import User, InstagramSession
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from utils.encryptor import OptionalFernet
from config import get_settings
import json

def add_instagram_session(user_id: int, username: str, password: str, cookies_json: list = None):
    """
    –î–æ–±–∞–≤–∏—Ç—å Instagram —Å–µ—Å—Å–∏—é —Å –ª–æ–≥–∏–Ω–æ–º, –ø–∞—Ä–æ–ª–µ–º –∏ –∫—É–∫–∞–º–∏
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram
        password: –ü–∞—Ä–æ–ª—å Instagram
        cookies_json: –°–ø–∏—Å–æ–∫ –∫—É–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    # Connect to database
    engine = create_engine('sqlite:///bot.db')
    Session = sessionmaker(bind=engine)
    session = Session()
    
    # Get user
    user = session.query(User).filter(User.id == user_id).first()
    if not user:
        print(f'‚ùå User {user_id} not found')
        return False
    
    # Get settings and fernet
    settings = get_settings()
    fernet = OptionalFernet(settings.encryption_key)
    
    # Prepare cookies
    if cookies_json is None:
        cookies_json = []
    
    # Encrypt cookies
    cookies_raw = json.dumps(cookies_json, ensure_ascii=False)
    cookies_encrypted = fernet.encrypt(cookies_raw)
    
    # Encrypt password
    password_encrypted = fernet.encrypt(password)
    
    # Create Instagram session
    ig_session = InstagramSession(
        user_id=user_id,
        username=username,
        password=password_encrypted,
        cookies=cookies_encrypted,
        is_active=True
    )
    
    session.add(ig_session)
    session.commit()
    
    print(f'‚úÖ Instagram session created for @{username}')
    print(f'   User ID: {user_id}')
    print(f'   Username: {username}')
    print(f'   Password: {"*" * len(password)}')
    print(f'   Cookies: {len(cookies_json)} items')
    print(f'   Active: True')
    
    return True

def add_instagram_session_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Instagram —Å–µ—Å—Å–∏–∏"""
    print("üîê –î–æ–±–∞–≤–ª–µ–Ω–∏–µ Instagram —Å–µ—Å—Å–∏–∏")
    print("=" * 40)
    
    try:
        user_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
        username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Instagram: ")
        password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å Instagram: ")
        
        print("\nüìã –ö—É–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):")
        print("–í–≤–µ–¥–∏—Ç–µ –∫—É–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞")
        print("–ü—Ä–∏–º–µ—Ä: [{'name': 'sessionid', 'value': 'abc123', 'domain': '.instagram.com'}]")
        
        cookies_input = input("–ö—É–∫–∏: ").strip()
        cookies_json = []
        
        if cookies_input:
            try:
                cookies_json = json.loads(cookies_input)
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(cookies_json)} –∫—É–∫–æ–≤")
            except json.JSONDecodeError:
                print("‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –∫—É–∫–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        # Add session
        success = add_instagram_session(user_id, username, password, cookies_json)
        
        if success:
            print("\nüéâ Instagram —Å–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        else:
            print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏")
            
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except KeyboardInterrupt:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    add_instagram_session_interactive()
