#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏.
"""

import asyncio
import os
from datetime import datetime
from project.services.enhanced_proxy_tester import (
    test_proxy_connectivity,
    test_proxy_speed,
    test_proxy_instagram_access,
    test_proxy_screenshot,
    test_proxy_comprehensive,
    format_comprehensive_results
)

# Mock Proxy class for testing
class MockProxy:
    def __init__(self, host, scheme="http", username=None, password=None):
        self.id = 1
        self.host = host
        self.scheme = scheme
        self.username = username
        self.password = password

async def test_enhanced_proxy():
    """–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏."""
    
    print("üß™ –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
    test_proxy = MockProxy("127.0.0.1:8080")
    test_username = "instagram"
    
    print(f"üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏: {test_proxy.host}")
    print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç: @{test_username}")
    print("-" * 50)
    
    try:
        # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è —Å–≤—è–∑–Ω–æ—Å—Ç—å
        print("üîó –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è —Å–≤—è–∑–Ω–æ—Å—Ç—å...")
        connectivity_success, connectivity_msg, response_time = await test_proxy_connectivity(test_proxy)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {connectivity_success}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {connectivity_msg}")
        if response_time:
            print(f"–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞: {response_time:.2f}s")
        print()
        
        # –¢–µ—Å—Ç 2: –°–∫–æ—Ä–æ—Å—Ç—å
        print("‚ö° –¢–µ—Å—Ç 2: –°–∫–æ—Ä–æ—Å—Ç—å...")
        speed_success, speed_msg, speed_data = await test_proxy_speed(test_proxy)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {speed_success}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {speed_msg}")
        if speed_data:
            print(f"–î–∞–Ω–Ω—ã–µ: {speed_data}")
        print()
        
        # –¢–µ—Å—Ç 3: –î–æ—Å—Ç—É–ø –∫ Instagram
        print("üì± –¢–µ—Å—Ç 3: –î–æ—Å—Ç—É–ø –∫ Instagram...")
        instagram_success, instagram_msg, profile_data = await test_proxy_instagram_access(test_proxy, test_username)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {instagram_success}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {instagram_msg}")
        if profile_data:
            print(f"–î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è: {profile_data}")
        print()
        
        # –¢–µ—Å—Ç 4: –°–∫—Ä–∏–Ω—à–æ—Ç
        print("üì∏ –¢–µ—Å—Ç 4: –°–∫—Ä–∏–Ω—à–æ—Ç...")
        screenshot_success, screenshot_msg, screenshot_path = await test_proxy_screenshot(test_proxy, test_username)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {screenshot_success}")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {screenshot_msg}")
        if screenshot_path:
            print(f"–ü—É—Ç—å –∫ —Å–∫—Ä–∏–Ω—à–æ—Ç—É: {screenshot_path}")
        print()
        
        # –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç
        print("üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç...")
        comprehensive_results = await test_proxy_comprehensive(test_proxy, test_username)
        
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ê:")
        print("=" * 50)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        formatted_message = format_comprehensive_results(comprehensive_results)
        print(formatted_message)
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìà –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"–û–±—â–∏–π –±–∞–ª–ª: {comprehensive_results['overall_score']:.1f}%")
        print(f"–£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {comprehensive_results['successful_tests']}/{comprehensive_results['total_tests']}")
        
        for test_name, test_result in comprehensive_results['tests'].items():
            status = "‚úÖ" if test_result['success'] else "‚ùå"
            print(f"{status} {test_name}: {test_result['success']}")
        
        return comprehensive_results
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return None

async def test_multiple_proxies():
    """–¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ–∫—Å–∏."""
    
    print("\nüß™ –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–∫—Å–∏
    test_proxies = [
        MockProxy("127.0.0.1:8080"),
        MockProxy("127.0.0.1:8081"),
        MockProxy("127.0.0.1:8082")
    ]
    
    print(f"üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(test_proxies)} –ø—Ä–æ–∫—Å–∏")
    print("-" * 50)
    
    try:
        from project.services.enhanced_proxy_tester import test_multiple_proxies_enhanced, format_batch_results_enhanced
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–∫—Å–∏
        batch_results = await test_multiple_proxies_enhanced(test_proxies, "instagram")
        
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ù–ï–°–ö–û–õ–¨–ö–ò–• –ü–†–û–ö–°–ò:")
        print("=" * 50)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        formatted_message = format_batch_results_enhanced(batch_results)
        print(formatted_message)
        
        return batch_results
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ–∫—Å–∏: {e}")
        import traceback
        traceback.print_exc()
        return None

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏
    single_result = asyncio.run(test_enhanced_proxy())
    
    # –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ–∫—Å–∏
    batch_result = asyncio.run(test_multiple_proxies())
    
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print("=" * 50)
    
    if single_result:
        print(f"‚úÖ –¢–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏: –£—Å–ø–µ—à–Ω–æ")
        print(f"üìä –û–±—â–∏–π –±–∞–ª–ª: {single_result['overall_score']:.1f}%")
    else:
        print("‚ùå –¢–µ—Å—Ç –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏: –ù–µ—É–¥–∞—á–Ω–æ")
    
    if batch_result:
        print(f"‚úÖ –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ–∫—Å–∏: –£—Å–ø–µ—à–Ω–æ")
        print(f"üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {batch_result['success_rate']:.1f}%")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–æ–∫—Å–∏: –ù–µ—É–¥–∞—á–Ω–æ")
