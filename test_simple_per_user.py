"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
"""
import asyncio
from datetime import datetime, date, timedelta
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from project.models import User, Account, Base
from project.cron.auto_checker_manager import AutoCheckerManager

async def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
    print("\n" + "="*70)
    print("üß™ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–û–ô –ê–í–¢–û–ü–†–û–í–ï–†–ö–ò")
    print("="*70 + "\n")
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ë–î
    engine = create_engine('sqlite:///bot.db', echo=False)
    SessionLocal = sessionmaker(bind=engine)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n")
    with SessionLocal() as session:
        users = session.query(User).filter(User.is_active == True).all()
        
        if not users:
            print("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ!")
            print("   –î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –±–æ—Ç –∏–ª–∏ create_admin.py")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}\n")
        
        for user in users:
            print(f"üë§ User {user.id}: @{user.username}")
            print(f"   ‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {user.auto_check_interval} –º–∏–Ω—É—Ç")
            print(f"   ‚Ä¢ –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞: {'‚úÖ –í–∫–ª—é—á–µ–Ω–∞' if user.auto_check_enabled else '‚ùå –í—ã–∫–ª—é—á–µ–Ω–∞'}")
            
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            pending = session.query(Account).filter(
                Account.user_id == user.id,
                Account.done == False
            ).count()
            total = session.query(Account).filter(Account.user_id == user.id).count()
            
            print(f"   ‚Ä¢ –ê–∫–∫–∞—É–Ω—Ç–æ–≤: {total} (–æ–∂–∏–¥–∞—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {pending})")
            print()
    
    print("="*70)
    print("üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê –ê–í–¢–û–ü–†–û–í–ï–†–ö–ò")
    print("="*70 + "\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    manager = AutoCheckerManager.initialize(
        session_factory=SessionLocal,
        bot=None  # –ë–µ–∑ –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
    )
    
    print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–∑–¥–∞–Ω\n")
    
    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤
    print("="*70)
    print("üìã –ó–ê–ü–£–°–ö –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–û–í")
    print("="*70 + "\n")
    
    manager.start_all(run_immediately=False)
    
    print("\n" + "="*70)
    print("üìä –°–¢–ê–¢–£–° –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–û–í")
    print("="*70 + "\n")
    
    manager.print_status()
    
    # –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    if users:
        test_user_id = users[0].id
        print("="*70)
        print(f"üîß –¢–ï–°–¢: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–ª—è user {test_user_id}")
        print("="*70 + "\n")
        
        print(f"–¢–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {users[0].auto_check_interval} –º–∏–Ω—É—Ç")
        print(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: 15 –º–∏–Ω—É—Ç\n")
        
        manager.update_user_interval(test_user_id, 15)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –≤ –ë–î
        with SessionLocal() as session:
            user = session.query(User).filter(User.id == test_user_id).first()
            print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω: {user.auto_check_interval} –º–∏–Ω—É—Ç\n")
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    print("="*70)
    print("üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°")
    print("="*70 + "\n")
    
    stats = manager.get_all_stats()
    print(f"–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤: {stats['total_checkers']}\n")
    
    for stat in stats['checkers']:
        print(f"üë§ User {stat['user_id']} (@{stat.get('username', '?')})")
        print(f"   ‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {stat.get('interval_minutes', '?')} –º–∏–Ω—É—Ç")
        print(f"   ‚Ä¢ –ó–∞–ø—É—â–µ–Ω: {'‚úÖ' if stat['is_running'] else '‚ùå'}")
        print(f"   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {stat['total_checks']}")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {stat['total_found']}")
        print()
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
    print("="*70)
    print("üõë –û–°–¢–ê–ù–û–í–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–û–í")
    print("="*70 + "\n")
    
    manager.stop_all()
    
    print("‚úÖ –í—Å–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\n")
    
    print("="*70)
    print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
    print("="*70)
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ:")
    print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("   ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("   ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
    print("   ‚úÖ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤")
    print("   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞")
    print("   ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("   ‚úÖ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–≤")
    print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!\n")

if __name__ == "__main__":
    asyncio.run(simple_test())

